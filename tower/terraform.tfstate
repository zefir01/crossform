{
  "version": 4,
  "terraform_version": "1.8.1",
  "serial": 305,
  "lineage": "a1a7c7c1-28e6-7716-d35f-9cffebdba495",
  "outputs": {
    "argo_pass": {
      "value": "CS0HzEm1gOf5LYv3",
      "type": "string",
      "sensitive": true
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": null,
            "group_names": [
              "us-west-2"
            ],
            "id": "us-west-2",
            "names": [
              "us-west-2a",
              "us-west-2b",
              "us-west-2c",
              "us-west-2d"
            ],
            "state": null,
            "timeouts": null,
            "zone_ids": [
              "usw2-az1",
              "usw2-az2",
              "usw2-az3",
              "usw2-az4"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US West (Oregon)",
            "endpoint": "ec2.us-west-2.amazonaws.com",
            "id": "us-west-2",
            "name": "us-west-2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "crossform",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "../helm/crossform",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "crossform",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.0.10",
                "chart": "crossform",
                "name": "crossform",
                "namespace": "crossplane-system",
                "revision": 4,
                "values": "{}",
                "version": "0.0.10"
              }
            ],
            "name": "crossform",
            "namespace": "crossplane-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": null,
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "0.0.10",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "helm_release.crossplane",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "crossplane",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "crossplane",
            "cleanup_on_fail": true,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "crossplane",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.15.2",
                "chart": "crossplane",
                "name": "crossplane",
                "namespace": "crossplane-system",
                "revision": 1,
                "values": "{\"args\":[\"--enable-environment-configs=true\",\"--enable-composition-functions-extra-resources=true\",\"--enable-ssa-claims\"],\"registry\":\"index.docker.io\"}",
                "version": "1.15.2"
              }
            ],
            "name": "crossplane",
            "namespace": "crossplane-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.crossplane.io/stable",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "args:\n  - --enable-environment-configs=true\n  - --enable-composition-functions-extra-resources=true\n  - --enable-ssa-claims\nregistry: index.docker.io\n"
            ],
            "verify": false,
            "version": "1.15.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "external_dns",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "external-dns",
            "cleanup_on_fail": true,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "external-dns",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "0.14.1",
                "chart": "external-dns",
                "name": "external-dns",
                "namespace": "kube-system",
                "revision": 2,
                "values": "{\"extraArgs\":{\"annotation-filter\":\"external-dns.kubernetes.io/enable=true\"},\"interval\":\"10m\",\"logLevel\":\"debug\",\"policy\":\"sync\",\"provider\":\"aws\",\"publishInternalServices\":true,\"registry\":\"txt\",\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::482235484697:role/irsa-crossform-tower-externaldns-m4dx0qad\"}},\"triggerLoopOnEvent\":true,\"txtOwnerId\":\"crossform\",\"txtPrefix\":\"external-dns\"}",
                "version": "7.2.0"
              }
            ],
            "name": "external-dns",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.bitnami.com/bitnami",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "extraArgs.annotation-filter=external-dns.kubernetes.io/enable",
                "type": "",
                "value": "true"
              },
              {
                "name": "interval",
                "type": "",
                "value": "10m"
              },
              {
                "name": "logLevel",
                "type": "",
                "value": "debug"
              },
              {
                "name": "policy",
                "type": "",
                "value": "sync"
              },
              {
                "name": "provider",
                "type": "",
                "value": "aws"
              },
              {
                "name": "publishInternalServices",
                "type": "",
                "value": "true"
              },
              {
                "name": "registry",
                "type": "",
                "value": "txt"
              },
              {
                "name": "serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                "type": "",
                "value": "arn:aws:iam::482235484697:role/irsa-crossform-tower-externaldns-m4dx0qad"
              },
              {
                "name": "triggerLoopOnEvent",
                "type": "",
                "value": "true"
              },
              {
                "name": "txtOwnerId",
                "type": "",
                "value": "crossform"
              },
              {
                "name": "txtPrefix",
                "type": "",
                "value": "external-dns"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "7.2.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.irsa_external_dns.aws_iam_role.irsa",
            "module.irsa_external_dns.data.aws_caller_identity.current",
            "module.irsa_external_dns.data.aws_iam_policy_document.this",
            "module.irsa_external_dns.data.aws_partition.current",
            "module.irsa_external_dns.random_string.random",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "deployment_config_aws",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "pkg.crossplane.io/v1beta1",
                "kind": "DeploymentRuntimeConfig",
                "metadata": {
                  "name": "provider-aws"
                },
                "spec": {
                  "serviceAccountTemplate": {
                    "metadata": {
                      "annotations": {
                        "eks.amazonaws.com/role-arn": "arn:aws:iam::482235484697:role/irsa-crossform-tower-crossplane-pp46jpsu"
                      },
                      "name": "crossplane-provider-aws"
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "serviceAccountTemplate": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "object",
                                {
                                  "eks.amazonaws.com/role-arn": "string"
                                }
                              ],
                              "name": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "pkg.crossplane.io/v1beta1",
                "kind": "DeploymentRuntimeConfig",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "provider-aws",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "deploymentTemplate": {
                    "metadata": {
                      "annotations": null,
                      "labels": null,
                      "name": null
                    },
                    "spec": {
                      "minReadySeconds": null,
                      "paused": null,
                      "progressDeadlineSeconds": null,
                      "replicas": null,
                      "revisionHistoryLimit": null,
                      "selector": {
                        "matchExpressions": null,
                        "matchLabels": null
                      },
                      "strategy": {
                        "rollingUpdate": {
                          "maxSurge": null,
                          "maxUnavailable": null
                        },
                        "type": null
                      },
                      "template": {
                        "metadata": {
                          "annotations": null,
                          "finalizers": null,
                          "labels": null,
                          "name": null,
                          "namespace": null
                        },
                        "spec": {
                          "activeDeadlineSeconds": null,
                          "affinity": {
                            "nodeAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": {
                                "nodeSelectorTerms": null
                              }
                            },
                            "podAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": null
                            },
                            "podAntiAffinity": {
                              "preferredDuringSchedulingIgnoredDuringExecution": null,
                              "requiredDuringSchedulingIgnoredDuringExecution": null
                            }
                          },
                          "automountServiceAccountToken": null,
                          "containers": null,
                          "dnsConfig": {
                            "nameservers": null,
                            "options": null,
                            "searches": null
                          },
                          "dnsPolicy": null,
                          "enableServiceLinks": null,
                          "ephemeralContainers": null,
                          "hostAliases": null,
                          "hostIPC": null,
                          "hostNetwork": null,
                          "hostPID": null,
                          "hostUsers": null,
                          "hostname": null,
                          "imagePullSecrets": null,
                          "initContainers": null,
                          "nodeName": null,
                          "nodeSelector": null,
                          "os": {
                            "name": null
                          },
                          "overhead": null,
                          "preemptionPolicy": null,
                          "priority": null,
                          "priorityClassName": null,
                          "readinessGates": null,
                          "resourceClaims": null,
                          "restartPolicy": null,
                          "runtimeClassName": null,
                          "schedulerName": null,
                          "schedulingGates": null,
                          "securityContext": {
                            "fsGroup": null,
                            "fsGroupChangePolicy": null,
                            "runAsGroup": null,
                            "runAsNonRoot": null,
                            "runAsUser": null,
                            "seLinuxOptions": {
                              "level": null,
                              "role": null,
                              "type": null,
                              "user": null
                            },
                            "seccompProfile": {
                              "localhostProfile": null,
                              "type": null
                            },
                            "supplementalGroups": null,
                            "sysctls": null,
                            "windowsOptions": {
                              "gmsaCredentialSpec": null,
                              "gmsaCredentialSpecName": null,
                              "hostProcess": null,
                              "runAsUserName": null
                            }
                          },
                          "serviceAccount": null,
                          "serviceAccountName": null,
                          "setHostnameAsFQDN": null,
                          "shareProcessNamespace": null,
                          "subdomain": null,
                          "terminationGracePeriodSeconds": null,
                          "tolerations": null,
                          "topologySpreadConstraints": null,
                          "volumes": null
                        }
                      }
                    }
                  },
                  "serviceAccountTemplate": {
                    "metadata": {
                      "annotations": {
                        "eks.amazonaws.com/role-arn": "arn:aws:iam::482235484697:role/irsa-crossform-tower-crossplane-pp46jpsu"
                      },
                      "labels": null,
                      "name": "crossplane-provider-aws"
                    }
                  },
                  "serviceTemplate": {
                    "metadata": {
                      "annotations": null,
                      "labels": null,
                      "name": null
                    }
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "deploymentTemplate": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "labels": [
                                "map",
                                "string"
                              ],
                              "name": "string"
                            }
                          ],
                          "spec": [
                            "object",
                            {
                              "minReadySeconds": "number",
                              "paused": "bool",
                              "progressDeadlineSeconds": "number",
                              "replicas": "number",
                              "revisionHistoryLimit": "number",
                              "selector": [
                                "object",
                                {
                                  "matchExpressions": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "key": "string",
                                        "operator": "string",
                                        "values": [
                                          "list",
                                          "string"
                                        ]
                                      }
                                    ]
                                  ],
                                  "matchLabels": [
                                    "map",
                                    "string"
                                  ]
                                }
                              ],
                              "strategy": [
                                "object",
                                {
                                  "rollingUpdate": [
                                    "object",
                                    {
                                      "maxSurge": "string",
                                      "maxUnavailable": "string"
                                    }
                                  ],
                                  "type": "string"
                                }
                              ],
                              "template": [
                                "object",
                                {
                                  "metadata": [
                                    "object",
                                    {
                                      "annotations": [
                                        "map",
                                        "string"
                                      ],
                                      "finalizers": [
                                        "list",
                                        "string"
                                      ],
                                      "labels": [
                                        "map",
                                        "string"
                                      ],
                                      "name": "string",
                                      "namespace": "string"
                                    }
                                  ],
                                  "spec": [
                                    "object",
                                    {
                                      "activeDeadlineSeconds": "number",
                                      "affinity": [
                                        "object",
                                        {
                                          "nodeAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "preference": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchFields": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ]
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "object",
                                                {
                                                  "nodeSelectorTerms": [
                                                    "list",
                                                    [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchFields": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ]
                                                      }
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ],
                                          "podAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "podAffinityTerm": [
                                                      "object",
                                                      {
                                                        "labelSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "matchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "mismatchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "namespaceSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "namespaces": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "topologyKey": "string"
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "labelSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "matchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "mismatchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "namespaceSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "namespaces": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "topologyKey": "string"
                                                  }
                                                ]
                                              ]
                                            }
                                          ],
                                          "podAntiAffinity": [
                                            "object",
                                            {
                                              "preferredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "podAffinityTerm": [
                                                      "object",
                                                      {
                                                        "labelSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "matchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "mismatchLabelKeys": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "namespaceSelector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "namespaces": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "topologyKey": "string"
                                                      }
                                                    ],
                                                    "weight": "number"
                                                  }
                                                ]
                                              ],
                                              "requiredDuringSchedulingIgnoredDuringExecution": [
                                                "list",
                                                [
                                                  "object",
                                                  {
                                                    "labelSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "matchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "mismatchLabelKeys": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "namespaceSelector": [
                                                      "object",
                                                      {
                                                        "matchExpressions": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "key": "string",
                                                              "operator": "string",
                                                              "values": [
                                                                "list",
                                                                "string"
                                                              ]
                                                            }
                                                          ]
                                                        ],
                                                        "matchLabels": [
                                                          "map",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "namespaces": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "topologyKey": "string"
                                                  }
                                                ]
                                              ]
                                            }
                                          ]
                                        }
                                      ],
                                      "automountServiceAccountToken": "bool",
                                      "containers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "dnsConfig": [
                                        "object",
                                        {
                                          "nameservers": [
                                            "list",
                                            "string"
                                          ],
                                          "options": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "name": "string",
                                                "value": "string"
                                              }
                                            ]
                                          ],
                                          "searches": [
                                            "list",
                                            "string"
                                          ]
                                        }
                                      ],
                                      "dnsPolicy": "string",
                                      "enableServiceLinks": "bool",
                                      "ephemeralContainers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "targetContainerName": "string",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "hostAliases": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "hostnames": [
                                              "list",
                                              "string"
                                            ],
                                            "ip": "string"
                                          }
                                        ]
                                      ],
                                      "hostIPC": "bool",
                                      "hostNetwork": "bool",
                                      "hostPID": "bool",
                                      "hostUsers": "bool",
                                      "hostname": "string",
                                      "imagePullSecrets": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ]
                                      ],
                                      "initContainers": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "args": [
                                              "list",
                                              "string"
                                            ],
                                            "command": [
                                              "list",
                                              "string"
                                            ],
                                            "env": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "name": "string",
                                                  "value": "string",
                                                  "valueFrom": [
                                                    "object",
                                                    {
                                                      "configMapKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ],
                                                      "secretKeyRef": [
                                                        "object",
                                                        {
                                                          "key": "string",
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "envFrom": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "configMapRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ],
                                                  "prefix": "string",
                                                  "secretRef": [
                                                    "object",
                                                    {
                                                      "name": "string",
                                                      "optional": "bool"
                                                    }
                                                  ]
                                                }
                                              ]
                                            ],
                                            "image": "string",
                                            "imagePullPolicy": "string",
                                            "lifecycle": [
                                              "object",
                                              {
                                                "postStart": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "preStop": [
                                                  "object",
                                                  {
                                                    "exec": [
                                                      "object",
                                                      {
                                                        "command": [
                                                          "list",
                                                          "string"
                                                        ]
                                                      }
                                                    ],
                                                    "httpGet": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "httpHeaders": [
                                                          "list",
                                                          [
                                                            "object",
                                                            {
                                                              "name": "string",
                                                              "value": "string"
                                                            }
                                                          ]
                                                        ],
                                                        "path": "string",
                                                        "port": "string",
                                                        "scheme": "string"
                                                      }
                                                    ],
                                                    "sleep": [
                                                      "object",
                                                      {
                                                        "seconds": "number"
                                                      }
                                                    ],
                                                    "tcpSocket": [
                                                      "object",
                                                      {
                                                        "host": "string",
                                                        "port": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "livenessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "name": "string",
                                            "ports": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "containerPort": "number",
                                                  "hostIP": "string",
                                                  "hostPort": "number",
                                                  "name": "string",
                                                  "protocol": "string"
                                                }
                                              ]
                                            ],
                                            "readinessProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "resizePolicy": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "resourceName": "string",
                                                  "restartPolicy": "string"
                                                }
                                              ]
                                            ],
                                            "resources": [
                                              "object",
                                              {
                                                "claims": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "name": "string"
                                                    }
                                                  ]
                                                ],
                                                "limits": [
                                                  "map",
                                                  "string"
                                                ],
                                                "requests": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "restartPolicy": "string",
                                            "securityContext": [
                                              "object",
                                              {
                                                "allowPrivilegeEscalation": "bool",
                                                "capabilities": [
                                                  "object",
                                                  {
                                                    "add": [
                                                      "list",
                                                      "string"
                                                    ],
                                                    "drop": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "privileged": "bool",
                                                "procMount": "string",
                                                "readOnlyRootFilesystem": "bool",
                                                "runAsGroup": "number",
                                                "runAsNonRoot": "bool",
                                                "runAsUser": "number",
                                                "seLinuxOptions": [
                                                  "object",
                                                  {
                                                    "level": "string",
                                                    "role": "string",
                                                    "type": "string",
                                                    "user": "string"
                                                  }
                                                ],
                                                "seccompProfile": [
                                                  "object",
                                                  {
                                                    "localhostProfile": "string",
                                                    "type": "string"
                                                  }
                                                ],
                                                "windowsOptions": [
                                                  "object",
                                                  {
                                                    "gmsaCredentialSpec": "string",
                                                    "gmsaCredentialSpecName": "string",
                                                    "hostProcess": "bool",
                                                    "runAsUserName": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "startupProbe": [
                                              "object",
                                              {
                                                "exec": [
                                                  "object",
                                                  {
                                                    "command": [
                                                      "list",
                                                      "string"
                                                    ]
                                                  }
                                                ],
                                                "failureThreshold": "number",
                                                "grpc": [
                                                  "object",
                                                  {
                                                    "port": "number",
                                                    "service": "string"
                                                  }
                                                ],
                                                "httpGet": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "httpHeaders": [
                                                      "list",
                                                      [
                                                        "object",
                                                        {
                                                          "name": "string",
                                                          "value": "string"
                                                        }
                                                      ]
                                                    ],
                                                    "path": "string",
                                                    "port": "string",
                                                    "scheme": "string"
                                                  }
                                                ],
                                                "initialDelaySeconds": "number",
                                                "periodSeconds": "number",
                                                "successThreshold": "number",
                                                "tcpSocket": [
                                                  "object",
                                                  {
                                                    "host": "string",
                                                    "port": "string"
                                                  }
                                                ],
                                                "terminationGracePeriodSeconds": "number",
                                                "timeoutSeconds": "number"
                                              }
                                            ],
                                            "stdin": "bool",
                                            "stdinOnce": "bool",
                                            "terminationMessagePath": "string",
                                            "terminationMessagePolicy": "string",
                                            "tty": "bool",
                                            "volumeDevices": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "devicePath": "string",
                                                  "name": "string"
                                                }
                                              ]
                                            ],
                                            "volumeMounts": [
                                              "list",
                                              [
                                                "object",
                                                {
                                                  "mountPath": "string",
                                                  "mountPropagation": "string",
                                                  "name": "string",
                                                  "readOnly": "bool",
                                                  "subPath": "string",
                                                  "subPathExpr": "string"
                                                }
                                              ]
                                            ],
                                            "workingDir": "string"
                                          }
                                        ]
                                      ],
                                      "nodeName": "string",
                                      "nodeSelector": [
                                        "map",
                                        "string"
                                      ],
                                      "os": [
                                        "object",
                                        {
                                          "name": "string"
                                        }
                                      ],
                                      "overhead": [
                                        "map",
                                        "string"
                                      ],
                                      "preemptionPolicy": "string",
                                      "priority": "number",
                                      "priorityClassName": "string",
                                      "readinessGates": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "conditionType": "string"
                                          }
                                        ]
                                      ],
                                      "resourceClaims": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "source": [
                                              "object",
                                              {
                                                "resourceClaimName": "string",
                                                "resourceClaimTemplateName": "string"
                                              }
                                            ]
                                          }
                                        ]
                                      ],
                                      "restartPolicy": "string",
                                      "runtimeClassName": "string",
                                      "schedulerName": "string",
                                      "schedulingGates": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string"
                                          }
                                        ]
                                      ],
                                      "securityContext": [
                                        "object",
                                        {
                                          "fsGroup": "number",
                                          "fsGroupChangePolicy": "string",
                                          "runAsGroup": "number",
                                          "runAsNonRoot": "bool",
                                          "runAsUser": "number",
                                          "seLinuxOptions": [
                                            "object",
                                            {
                                              "level": "string",
                                              "role": "string",
                                              "type": "string",
                                              "user": "string"
                                            }
                                          ],
                                          "seccompProfile": [
                                            "object",
                                            {
                                              "localhostProfile": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "supplementalGroups": [
                                            "list",
                                            "number"
                                          ],
                                          "sysctls": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "name": "string",
                                                "value": "string"
                                              }
                                            ]
                                          ],
                                          "windowsOptions": [
                                            "object",
                                            {
                                              "gmsaCredentialSpec": "string",
                                              "gmsaCredentialSpecName": "string",
                                              "hostProcess": "bool",
                                              "runAsUserName": "string"
                                            }
                                          ]
                                        }
                                      ],
                                      "serviceAccount": "string",
                                      "serviceAccountName": "string",
                                      "setHostnameAsFQDN": "bool",
                                      "shareProcessNamespace": "bool",
                                      "subdomain": "string",
                                      "terminationGracePeriodSeconds": "number",
                                      "tolerations": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "effect": "string",
                                            "key": "string",
                                            "operator": "string",
                                            "tolerationSeconds": "number",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "topologySpreadConstraints": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "labelSelector": [
                                              "object",
                                              {
                                                "matchExpressions": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "operator": "string",
                                                      "values": [
                                                        "list",
                                                        "string"
                                                      ]
                                                    }
                                                  ]
                                                ],
                                                "matchLabels": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "matchLabelKeys": [
                                              "list",
                                              "string"
                                            ],
                                            "maxSkew": "number",
                                            "minDomains": "number",
                                            "nodeAffinityPolicy": "string",
                                            "nodeTaintsPolicy": "string",
                                            "topologyKey": "string",
                                            "whenUnsatisfiable": "string"
                                          }
                                        ]
                                      ],
                                      "volumes": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "awsElasticBlockStore": [
                                              "object",
                                              {
                                                "fsType": "string",
                                                "partition": "number",
                                                "readOnly": "bool",
                                                "volumeID": "string"
                                              }
                                            ],
                                            "azureDisk": [
                                              "object",
                                              {
                                                "cachingMode": "string",
                                                "diskName": "string",
                                                "diskURI": "string",
                                                "fsType": "string",
                                                "kind": "string",
                                                "readOnly": "bool"
                                              }
                                            ],
                                            "azureFile": [
                                              "object",
                                              {
                                                "readOnly": "bool",
                                                "secretName": "string",
                                                "shareName": "string"
                                              }
                                            ],
                                            "cephfs": [
                                              "object",
                                              {
                                                "monitors": [
                                                  "list",
                                                  "string"
                                                ],
                                                "path": "string",
                                                "readOnly": "bool",
                                                "secretFile": "string",
                                                "secretRef": [
                                                  "object",
                                                  {
                                                    "name": "string"
                                                  }
                                                ],
                                                "user": "string"
                                              }
                                            ],
                                            "cinder": [
                                              "object",
                                              {
                                                "fsType": "string",
                                                "readOnly": "bool",
                                                "secretRef": [
                                                  "object",
                                                  {
                                                    "name": "string"
                                                  }
                                                ],
                                                "volumeID": "string"
                                              }
                                            ],
                                            "configMap": [
                                              "object",
                                              {
                                                "defaultMode": "number",
                                                "items": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "mode": "number",
                                                      "path": "string"
                                                    }
                                                  ]
                                                ],
                                                "name": "string",
                                                "optional": "bool"
                                              }
                                            ],
                                            "csi": [
                                              "object",
                                              {
                                                "driver": "string",
                                                "fsType": "string",
                                                "nodePublishSecretRef": [
                                                  "object",
                                                  {
                                                    "name": "string"
                                                  }
                                                ],
                                                "readOnly": "bool",
                                                "volumeAttributes": [
                                                  "map",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "downwardAPI": [
                                              "object",
                                              {
                                                "defaultMode": "number",
                                                "items": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "fieldRef": [
                                                        "object",
                                                        {
                                                          "apiVersion": "string",
                                                          "fieldPath": "string"
                                                        }
                                                      ],
                                                      "mode": "number",
                                                      "path": "string",
                                                      "resourceFieldRef": [
                                                        "object",
                                                        {
                                                          "containerName": "string",
                                                          "divisor": "string",
                                                          "resource": "string"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                ]
                                              }
                                            ],
                                            "emptyDir": [
                                              "object",
                                              {
                                                "medium": "string",
                                                "sizeLimit": "string"
                                              }
                                            ],
                                            "ephemeral": [
                                              "object",
                                              {
                                                "volumeClaimTemplate": [
                                                  "object",
                                                  {
                                                    "metadata": [
                                                      "object",
                                                      {
                                                        "annotations": [
                                                          "map",
                                                          "string"
                                                        ],
                                                        "finalizers": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "labels": [
                                                          "map",
                                                          "string"
                                                        ],
                                                        "name": "string",
                                                        "namespace": "string"
                                                      }
                                                    ],
                                                    "spec": [
                                                      "object",
                                                      {
                                                        "accessModes": [
                                                          "list",
                                                          "string"
                                                        ],
                                                        "dataSource": [
                                                          "object",
                                                          {
                                                            "apiGroup": "string",
                                                            "kind": "string",
                                                            "name": "string"
                                                          }
                                                        ],
                                                        "dataSourceRef": [
                                                          "object",
                                                          {
                                                            "apiGroup": "string",
                                                            "kind": "string",
                                                            "name": "string",
                                                            "namespace": "string"
                                                          }
                                                        ],
                                                        "resources": [
                                                          "object",
                                                          {
                                                            "limits": [
                                                              "map",
                                                              "string"
                                                            ],
                                                            "requests": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "selector": [
                                                          "object",
                                                          {
                                                            "matchExpressions": [
                                                              "list",
                                                              [
                                                                "object",
                                                                {
                                                                  "key": "string",
                                                                  "operator": "string",
                                                                  "values": [
                                                                    "list",
                                                                    "string"
                                                                  ]
                                                                }
                                                              ]
                                                            ],
                                                            "matchLabels": [
                                                              "map",
                                                              "string"
                                                            ]
                                                          }
                                                        ],
                                                        "storageClassName": "string",
                                                        "volumeAttributesClassName": "string",
                                                        "volumeMode": "string",
                                                        "volumeName": "string"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              }
                                            ],
                                            "fc": [
                                              "object",
                                              {
                                                "fsType": "string",
                                                "lun": "number",
                                                "readOnly": "bool",
                                                "targetWWNs": [
                                                  "list",
                                                  "string"
                                                ],
                                                "wwids": [
                                                  "list",
                                                  "string"
                                                ]
                                              }
                                            ],
                                            "flexVolume": [
                                              "object",
                                              {
                                                "driver": "string",
                                                "fsType": "string",
                                                "options": [
                                                  "map",
                                                  "string"
                                                ],
                                                "readOnly": "bool",
                                                "secretRef": [
                                                  "object",
                                                  {
                                                    "name": "string"
                                                  }
                                                ]
                                              }
                                            ],
                                            "flocker": [
                                              "object",
                                              {
                                                "datasetName": "string",
                                                "datasetUUID": "string"
                                              }
                                            ],
                                            "gcePersistentDisk": [
                                              "object",
                                              {
                                                "fsType": "string",
                                                "partition": "number",
                                                "pdName": "string",
                                                "readOnly": "bool"
                                              }
                                            ],
                                            "gitRepo": [
                                              "object",
                                              {
                                                "directory": "string",
                                                "repository": "string",
                                                "revision": "string"
                                              }
                                            ],
                                            "glusterfs": [
                                              "object",
                                              {
                                                "endpoints": "string",
                                                "path": "string",
                                                "readOnly": "bool"
                                              }
                                            ],
                                            "hostPath": [
                                              "object",
                                              {
                                                "path": "string",
                                                "type": "string"
                                              }
                                            ],
                                            "iscsi": [
                                              "object",
                                              {
                                                "chapAuthDiscovery": "bool",
                                                "chapAuthSession": "bool",
                                                "fsType": "string",
                                                "initiatorName": "string",
                                                "iqn": "string",
                                                "iscsiInterface": "string",
                                                "lun": "number",
                                                "portals": [
                                                  "list",
                                                  "string"
                                                ],
                                                "readOnly": "bool",
                                                "secretRef": [
                                                  "object",
                                                  {
                                                    "name": "string"
                                                  }
                                                ],
                                                "targetPortal": "string"
                                              }
                                            ],
                                            "name": "string",
                                            "nfs": [
                                              "object",
                                              {
                                                "path": "string",
                                                "readOnly": "bool",
                                                "server": "string"
                                              }
                                            ],
                                            "persistentVolumeClaim": [
                                              "object",
                                              {
                                                "claimName": "string",
                                                "readOnly": "bool"
                                              }
                                            ],
                                            "photonPersistentDisk": [
                                              "object",
                                              {
                                                "fsType": "string",
                                                "pdID": "string"
                                              }
                                            ],
                                            "portworxVolume": [
                                              "object",
                                              {
                                                "fsType": "string",
                                                "readOnly": "bool",
                                                "volumeID": "string"
                                              }
                                            ],
                                            "projected": [
                                              "object",
                                              {
                                                "defaultMode": "number",
                                                "sources": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "clusterTrustBundle": [
                                                        "object",
                                                        {
                                                          "labelSelector": [
                                                            "object",
                                                            {
                                                              "matchExpressions": [
                                                                "list",
                                                                [
                                                                  "object",
                                                                  {
                                                                    "key": "string",
                                                                    "operator": "string",
                                                                    "values": [
                                                                      "list",
                                                                      "string"
                                                                    ]
                                                                  }
                                                                ]
                                                              ],
                                                              "matchLabels": [
                                                                "map",
                                                                "string"
                                                              ]
                                                            }
                                                          ],
                                                          "name": "string",
                                                          "optional": "bool",
                                                          "path": "string",
                                                          "signerName": "string"
                                                        }
                                                      ],
                                                      "configMap": [
                                                        "object",
                                                        {
                                                          "items": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "mode": "number",
                                                                "path": "string"
                                                              }
                                                            ]
                                                          ],
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "downwardAPI": [
                                                        "object",
                                                        {
                                                          "items": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "fieldRef": [
                                                                  "object",
                                                                  {
                                                                    "apiVersion": "string",
                                                                    "fieldPath": "string"
                                                                  }
                                                                ],
                                                                "mode": "number",
                                                                "path": "string",
                                                                "resourceFieldRef": [
                                                                  "object",
                                                                  {
                                                                    "containerName": "string",
                                                                    "divisor": "string",
                                                                    "resource": "string"
                                                                  }
                                                                ]
                                                              }
                                                            ]
                                                          ]
                                                        }
                                                      ],
                                                      "secret": [
                                                        "object",
                                                        {
                                                          "items": [
                                                            "list",
                                                            [
                                                              "object",
                                                              {
                                                                "key": "string",
                                                                "mode": "number",
                                                                "path": "string"
                                                              }
                                                            ]
                                                          ],
                                                          "name": "string",
                                                          "optional": "bool"
                                                        }
                                                      ],
                                                      "serviceAccountToken": [
                                                        "object",
                                                        {
                                                          "audience": "string",
                                                          "expirationSeconds": "number",
                                                          "path": "string"
                                                        }
                                                      ]
                                                    }
                                                  ]
                                                ]
                                              }
                                            ],
                                            "quobyte": [
                                              "object",
                                              {
                                                "group": "string",
                                                "readOnly": "bool",
                                                "registry": "string",
                                                "tenant": "string",
                                                "user": "string",
                                                "volume": "string"
                                              }
                                            ],
                                            "rbd": [
                                              "object",
                                              {
                                                "fsType": "string",
                                                "image": "string",
                                                "keyring": "string",
                                                "monitors": [
                                                  "list",
                                                  "string"
                                                ],
                                                "pool": "string",
                                                "readOnly": "bool",
                                                "secretRef": [
                                                  "object",
                                                  {
                                                    "name": "string"
                                                  }
                                                ],
                                                "user": "string"
                                              }
                                            ],
                                            "scaleIO": [
                                              "object",
                                              {
                                                "fsType": "string",
                                                "gateway": "string",
                                                "protectionDomain": "string",
                                                "readOnly": "bool",
                                                "secretRef": [
                                                  "object",
                                                  {
                                                    "name": "string"
                                                  }
                                                ],
                                                "sslEnabled": "bool",
                                                "storageMode": "string",
                                                "storagePool": "string",
                                                "system": "string",
                                                "volumeName": "string"
                                              }
                                            ],
                                            "secret": [
                                              "object",
                                              {
                                                "defaultMode": "number",
                                                "items": [
                                                  "list",
                                                  [
                                                    "object",
                                                    {
                                                      "key": "string",
                                                      "mode": "number",
                                                      "path": "string"
                                                    }
                                                  ]
                                                ],
                                                "optional": "bool",
                                                "secretName": "string"
                                              }
                                            ],
                                            "storageos": [
                                              "object",
                                              {
                                                "fsType": "string",
                                                "readOnly": "bool",
                                                "secretRef": [
                                                  "object",
                                                  {
                                                    "name": "string"
                                                  }
                                                ],
                                                "volumeName": "string",
                                                "volumeNamespace": "string"
                                              }
                                            ],
                                            "vsphereVolume": [
                                              "object",
                                              {
                                                "fsType": "string",
                                                "storagePolicyID": "string",
                                                "storagePolicyName": "string",
                                                "volumePath": "string"
                                              }
                                            ]
                                          }
                                        ]
                                      ]
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "serviceAccountTemplate": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "labels": [
                                "map",
                                "string"
                              ],
                              "name": "string"
                            }
                          ]
                        }
                      ],
                      "serviceTemplate": [
                        "object",
                        {
                          "metadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "labels": [
                                "map",
                                "string"
                              ],
                              "name": "string"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "helm_release.crossplane",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.irsa_provider_aws.aws_iam_role.irsa",
            "module.irsa_provider_aws.data.aws_caller_identity.current",
            "module.irsa_provider_aws.data.aws_iam_policy_document.this",
            "module.irsa_provider_aws.data.aws_partition.current",
            "module.irsa_provider_aws.random_string.random",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "provider_aws",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "pkg.crossplane.io/v1",
                "kind": "Provider",
                "metadata": {
                  "name": "provider-aws"
                },
                "spec": {
                  "package": "xpkg.upbound.io/crossplane-contrib/provider-aws:v0.47.2",
                  "runtimeConfigRef": {
                    "name": "provider-aws"
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "name": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "package": "string",
                      "runtimeConfigRef": [
                        "object",
                        {
                          "name": "string"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "pkg.crossplane.io/v1",
                "kind": "Provider",
                "metadata": {
                  "annotations": null,
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "provider-aws",
                  "namespace": null,
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "spec": {
                  "commonLabels": null,
                  "controllerConfigRef": {
                    "name": null
                  },
                  "ignoreCrossplaneConstraints": false,
                  "package": "xpkg.upbound.io/crossplane-contrib/provider-aws:v0.47.2",
                  "packagePullPolicy": "IfNotPresent",
                  "packagePullSecrets": null,
                  "revisionActivationPolicy": "Automatic",
                  "revisionHistoryLimit": 1,
                  "runtimeConfigRef": {
                    "apiVersion": "pkg.crossplane.io/v1beta1",
                    "kind": "DeploymentRuntimeConfig",
                    "name": "provider-aws"
                  },
                  "skipDependencyResolution": false
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "commonLabels": [
                        "map",
                        "string"
                      ],
                      "controllerConfigRef": [
                        "object",
                        {
                          "name": "string"
                        }
                      ],
                      "ignoreCrossplaneConstraints": "bool",
                      "package": "string",
                      "packagePullPolicy": "string",
                      "packagePullSecrets": [
                        "list",
                        [
                          "object",
                          {
                            "name": "string"
                          }
                        ]
                      ],
                      "revisionActivationPolicy": "string",
                      "revisionHistoryLimit": "number",
                      "runtimeConfigRef": [
                        "object",
                        {
                          "apiVersion": "string",
                          "kind": "string",
                          "name": "string"
                        }
                      ],
                      "skipDependencyResolution": "bool"
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "helm_release.crossplane",
            "kubernetes_manifest.deployment_config_aws",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.irsa_provider_aws.aws_iam_role.irsa",
            "module.irsa_provider_aws.data.aws_caller_identity.current",
            "module.irsa_provider_aws.data.aws_iam_policy_document.this",
            "module.irsa_provider_aws.data.aws_partition.current",
            "module.irsa_provider_aws.random_string.random",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_secret_v1",
      "name": "crossform_repo",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "repository": "git@github.com:zefir01/crossform.git",
              "sshPrivateKey": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAw+apSXPQF3AWAJZQtABEP5yOqma7lfdEhz5vc67CwrRufijc5RFG\nCertVFpWgwqJstsuf6TngoPrhF9TpDOE3Ow8CmYa1O6vOF1nKnBzCIu8S9dmm5+ZnIZumz\n7hyhxv1iDVJdoakOEzvh4poRxSwfxX2oYhV8NECCi3i+jzmYp9bEc8WfVRKP1mE3EZEXSj\n09yF0CPV1NDOnlevZQRsAPDQUDZW/EOmDinMJ59HrF3h6xmvrANVq1FvsUoAt6aw443+Ab\nrzZ6S+5nDaRPH0FnhYeFu7rvdwMB9G57KYxDFoViv5pTba0lZbDDA9Q9Jhtm1Q7NkAnYIn\nW/pivOTqcg0z8aX1ZaGH6XOFicFnCu2dSUqhXNgZDDx6TYzWvCKvioqql4ugM5uwd3dTZK\n8lUBVqo0myJM6Zd8jDqeLzprmZEbnJrSd8wDp2pTDJsmAIsIqUF0iUBEdPVjJ1qENbFaoc\nV2fB6diYFbubsj+ciQ+W1pZnDoyAYgya6ummhJozAAAFgLpslbq6bJW6AAAAB3NzaC1yc2\nEAAAGBAMPmqUlz0BdwFgCWULQARD+cjqpmu5X3RIc+b3OuwsK0bn4o3OURRgnq7VRaVoMK\nibLbLn+k54KD64RfU6QzhNzsPApmGtTurzhdZypwcwiLvEvXZpufmZyGbps+4cocb9Yg1S\nXaGpDhM74eKaEcUsH8V9qGIVfDRAgot4vo85mKfWxHPFn1USj9ZhNxGRF0o9PchdAj1dTQ\nzp5Xr2UEbADw0FA2VvxDpg4pzCefR6xd4esZr6wDVatRb7FKALemsOON/gG682ekvuZw2k\nTx9BZ4WHhbu673cDAfRueymMQxaFYr+aU22tJWWwwwPUPSYbZtUOzZAJ2CJ1v6Yrzk6nIN\nM/Gl9WWhh+lzhYnBZwrtnUlKoVzYGQw8ek2M1rwir4qKqpeLoDObsHd3U2SvJVAVaqNJsi\nTOmXfIw6ni86a5mRG5ya0nfMA6dqUwybJgCLCKlBdIlARHT1YydahDWxWqHFdnwenYmBW7\nm7I/nIkPltaWZw6MgGIMmurppoSaMwAAAAMBAAEAAAGAFPJTdJKpE/B8schgzbZflcuoJ4\nk/kovzbGCdKynrEkWXsO6um+GqcwIHKWdVa8KTMaglAyn/RSHU630D5QFLOhIaY2RChzUU\nUDsQfmWyrx293wAjrQ02MBnhtsDVBLbgsG0nTVpST958mV4BRoRQRwSz4h5Ib2lmG1c7NP\n8OGQNJYOwHBHlqGa9qnDaSHx8xK0SfnD9QrGY9SYoHq436/GjDZWhCCcwz87y9YxkxYTlS\noEBJW+OpY92by0Gl7P0qKeNwRCobmylvEmUiVYOTNtqaqSPT4h5+KjCLzw+sRQfK4+9OGB\nBgfgdvzcu/IdfUgvHyC5KaqKzlKSAj4g4TQ3BvOb4VE9Pk5/PotkDyDQlaBJdXCNJpi3Ev\n+1Xm42XbtCOdBYn7xD1HtLFigx9EaaXR9ioTpRo7Sy81P3v2WfR53EOHgIhL6EUUIh5Zic\nPIIQFzBOwp1JKvVyBn7u7O1WL03maFmB093fJoXHVtxvyKjHJDbz6Jc/dEUtCqe90JAAAA\nwQCX/ZqiNu/0G+RsCOfk9OXYLjkilPFYhoECR7ta/afc38IpqUK7WuALHpcXj2e5484k1o\nZT1grDRrpgVj/CWGuZk/GuGdWQou6wk75FoeMsZbSFVQFSKGnQAkan7T+3GiDphM2S/HuK\ntX/Bo/CA97Yf2iFfRHlA8dL4yQO6yDp/3AxPGqnHYjjP4uA48KmxBrYjKDev77/y+fIP8x\nTOi+mbClaQlpyD6bZ61eYE5jqyBTIGvGOzw+g84hujsiE5LuEAAADBANaPRH99/v6dY9cy\n8LNWrK5cwyC+10WsSvnaFPRxts07EQyUDtSxrQPVCMbec3QZ8lGfkl2hJ503V3tzVmpGBJ\nEgvFaDDd3ewXYSKeponTqqUqUMRoqAHP2T546+AsANFLi1p5L454Q6z/TgMlaxhLmUQPmd\nzkA5ov4gF6VWjJ4p1d0ZBmaA7pxqoQ7zWLSSJgVcp9fdrFpuOh1Ge4WXFqen4ghkQtaohX\nwad0PUxoU2w+9/R0gZWffqG940GJAtKwAAAMEA6bzVQFH4G8Lwwb/UwhtC7x6UF1pdt/0V\ncQ+xkmOFfnn86qONPerPSGXRk8n7b+8lxWo2ZyexIltLSElYRCfKg/EZzYomt1hdypJEw/\nujXSvkAZa4xtsx90mg60WfdWYsSpP1zk3iKMqx2//zdkxobDEPzGmJSUmjEzjnZNuu/J8v\nlo6Kr2oPWid15tAFfbEsyDzrHrI+RdvKGcAw4ozI9jVvzBFS9Q39HLvau3i6WExIaMS/h9\nWiRvbiahq4QhMZAAAAB3VzZXJAd3MBAgM=\n-----END OPENSSH PRIVATE KEY-----\n",
              "type": "git"
            },
            "id": "crossplane-system/crossform-repo",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "crossform.io/secret-type": "repository"
                },
                "name": "crossform-repo",
                "namespace": "crossplane-system",
                "resource_version": "840969",
                "uid": "5cf32fbb-1606-4977-8194-0f295b9b3eda"
              }
            ],
            "timeouts": null,
            "type": "Opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "binary_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "helm_release.crossplane",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.alb",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::482235484697:policy/terraform-20240424030049645400000002",
            "attachment_count": 1,
            "description": "Permissions that are required to manage AWS Application Load Balancers.",
            "id": "arn:aws:iam::482235484697:policy/terraform-20240424030049645400000002",
            "name": "terraform-20240424030049645400000002",
            "name_prefix": "terraform-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"iam:CreateServiceLinkedRole\"],\"Condition\":{\"StringEquals\":{\"iam:AWSServiceName\":\"elasticloadbalancing.amazonaws.com\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:DescribeAccountAttributes\",\"ec2:DescribeAddresses\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeVpcs\",\"ec2:DescribeVpcPeeringConnections\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeInstances\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeTags\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeCoipPools\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTags\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"waf-regional:GetWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:AssociateWebACL\",\"waf-regional:DisassociateWebACL\",\"wafv2:GetWebACL\",\"wafv2:GetWebACLForResource\",\"wafv2:AssociateWebACL\",\"wafv2:DisassociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:CreateProtection\",\"shield:DeleteProtection\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:AuthorizeSecurityGroupIngress\",\"ec2:RevokeSecurityGroupIngress\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateSecurityGroup\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:CreateTags\",\"ec2:DeleteTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:AuthorizeSecurityGroupIngress\",\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:CreateTargetGroup\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateListener\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:DeleteRule\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:AddTags\",\"elasticloadbalancing:RemoveTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:AddTags\",\"elasticloadbalancing:RemoveTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"]},{\"Action\":[\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:DeleteLoadBalancer\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:DeleteTargetGroup\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"},{\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAXAR3ZRIMWMY7SBIQI",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.alb",
      "mode": "managed",
      "type": "helm_release",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "aws-load-balancer-controller",
            "cleanup_on_fail": true,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "aws-load-balancer-controller",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.5.2",
                "chart": "aws-load-balancer-controller",
                "name": "aws-load-balancer-controller",
                "namespace": "kube-system",
                "revision": 1,
                "values": "{\"clusterName\":\"crossform-tower\",\"replicaCount\":1,\"serviceAccount\":{\"create\":false,\"name\":\"aws-alb-ingress-controller\"},\"vpcId\":\"vpc-006f2f6336237da1e\"}",
                "version": "1.5.3"
              }
            ],
            "name": "aws-load-balancer-controller",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://aws.github.io/eks-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "clusterName",
                "type": "",
                "value": "crossform-tower"
              },
              {
                "name": "replicaCount",
                "type": "",
                "value": "1"
              },
              {
                "name": "serviceAccount.create",
                "type": "",
                "value": "false"
              },
              {
                "name": "serviceAccount.name",
                "type": "",
                "value": "aws-alb-ingress-controller"
              },
              {
                "name": "vpcId",
                "type": "",
                "value": "vpc-006f2f6336237da1e"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "1.5.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.alb.kubernetes_service_account.this",
            "module.alb.module.irsa.aws_iam_role.irsa",
            "module.alb.module.irsa.data.aws_caller_identity.current",
            "module.alb.module.irsa.data.aws_iam_policy_document.this",
            "module.alb.module.irsa.data.aws_partition.current",
            "module.alb.module.irsa.random_string.random",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.alb",
      "mode": "managed",
      "type": "kubernetes_cluster_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "aggregation_rule": [],
            "id": "aws-alb-ingress-controller",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "aws-alb-ingress-controller"
                },
                "name": "aws-alb-ingress-controller",
                "resource_version": "12468",
                "uid": "ded7cd8d-0d43-4834-aba1-e2c5b6a4afcc"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  "",
                  "extensions"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "configmaps",
                  "endpoints",
                  "events",
                  "ingresses",
                  "ingresses/status",
                  "services"
                ],
                "verbs": [
                  "create",
                  "get",
                  "list",
                  "update",
                  "watch",
                  "patch"
                ]
              },
              {
                "api_groups": [
                  "",
                  "extensions"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "nodes",
                  "pods",
                  "secrets",
                  "services",
                  "namespaces"
                ],
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.alb",
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "aws-alb-ingress-controller",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "aws-alb-ingress-controller"
                },
                "name": "aws-alb-ingress-controller",
                "resource_version": "12479",
                "uid": "4c81a07b-0bd9-4645-9cc8-f656e4bef89e"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "aws-alb-ingress-controller"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "aws-alb-ingress-controller",
                "namespace": "kube-system"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.alb.kubernetes_cluster_role.this",
            "module.alb.kubernetes_service_account.this",
            "module.alb.module.irsa.aws_iam_role.irsa",
            "module.alb.module.irsa.data.aws_caller_identity.current",
            "module.alb.module.irsa.data.aws_iam_policy_document.this",
            "module.alb.module.irsa.data.aws_partition.current",
            "module.alb.module.irsa.random_string.random",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.alb",
      "mode": "managed",
      "type": "kubernetes_service_account",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": true,
            "default_secret_name": "",
            "id": "kube-system/aws-alb-ingress-controller",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {
                  "eks.amazonaws.com/role-arn": "arn:aws:iam::482235484697:role/irsa-crossform-tower-alb-cloudwatch-r3230yjn"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/managed-by": "terraform",
                  "app.kubernetes.io/name": "aws-alb-ingress-controller"
                },
                "name": "aws-alb-ingress-controller",
                "namespace": "kube-system",
                "resource_version": "12470",
                "uid": "1583fbd3-03ad-4228-b14b-4cff45131bf5"
              }
            ],
            "secret": [],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.alb.module.irsa.aws_iam_role.irsa",
            "module.alb.module.irsa.data.aws_caller_identity.current",
            "module.alb.module.irsa.data.aws_iam_policy_document.this",
            "module.alb.module.irsa.data.aws_partition.current",
            "module.alb.module.irsa.random_string.random",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.alb.module.irsa",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "482235484697",
            "arn": "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com",
            "id": "482235484697",
            "user_id": "AIDAXAR3ZRIMVAPH4RMYC"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.alb.module.irsa",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "4070391302",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::482235484697:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:aud\": \"sts.amazonaws.com\"\n        },\n        \"StringLike\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:sub\": \"system:serviceaccount:kube-system:aws-alb-ingress-controller\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:aud"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      "system:serviceaccount:kube-system:aws-alb-ingress-controller"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::482235484697:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.alb.module.irsa",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.alb.module.irsa",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US West (Oregon)",
            "endpoint": "ec2.us-west-2.amazonaws.com",
            "id": "us-west-2",
            "name": "us-west-2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.alb.module.irsa",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::482235484697:role/irsa-crossform-tower-alb-cloudwatch-r3230yjn",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:aud\":\"sts.amazonaws.com\"},\"StringLike\":{\"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:sub\":\"system:serviceaccount:kube-system:aws-alb-ingress-controller\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::482235484697:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-04-24T03:00:50Z",
            "description": "",
            "force_detach_policies": false,
            "id": "irsa-crossform-tower-alb-cloudwatch-r3230yjn",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::482235484697:policy/terraform-20240424030049645400000002"
            ],
            "max_session_duration": 3600,
            "name": "irsa-crossform-tower-alb-cloudwatch-r3230yjn",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Name": "irsa-crossform-tower-alb-cloudwatch-r3230yjn"
            },
            "tags_all": {
              "Name": "irsa-crossform-tower-alb-cloudwatch-r3230yjn"
            },
            "unique_id": "AROAXAR3ZRIMRCGOXK6NJ"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.alb.module.irsa.data.aws_caller_identity.current",
            "module.alb.module.irsa.data.aws_iam_policy_document.this",
            "module.alb.module.irsa.data.aws_partition.current",
            "module.alb.module.irsa.random_string.random",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.alb.module.irsa",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "0",
          "schema_version": 0,
          "attributes": {
            "id": "irsa-crossform-tower-alb-cloudwatch-r3230yjn-20240424030051026100000005",
            "policy_arn": "arn:aws:iam::482235484697:policy/terraform-20240424030049645400000002",
            "role": "irsa-crossform-tower-alb-cloudwatch-r3230yjn"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.alb.aws_iam_policy.this",
            "module.alb.module.irsa.aws_iam_role.irsa",
            "module.alb.module.irsa.data.aws_caller_identity.current",
            "module.alb.module.irsa.data.aws_iam_policy_document.this",
            "module.alb.module.irsa.data.aws_partition.current",
            "module.alb.module.irsa.random_string.random",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.alb.module.irsa",
      "mode": "managed",
      "type": "random_string",
      "name": "random",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "r3230yjn",
            "keepers": null,
            "length": 8,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "r3230yjn",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "482235484697",
            "arn": "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com",
            "id": "482235484697",
            "user_id": "AIDAXAR3ZRIMVAPH4RMYC"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "2746741766",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"AssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sts:AssumeRoleWithWebIdentity\",\n        \"sts:AssumeRole\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole",
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": "AssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "argo",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::482235484697:policy/argocd-assume",
            "attachment_count": 1,
            "description": "",
            "id": "arn:aws:iam::482235484697:policy/argocd-assume",
            "name": "argocd-assume",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"sts:AssumeRoleWithWebIdentity\",\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Resource\":\"*\",\"Sid\":\"AssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAXAR3ZRIMTTQFTZ3YO",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.argo.data.aws_iam_policy_document.assume"
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "bcrypt_hash",
      "name": "argo_pass",
      "provider": "provider[\"registry.terraform.io/viktorradnai/bcrypt\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cleartext": "CS0HzEm1gOf5LYv3",
            "cost": 10,
            "id": "$2a$10$DWhME8LkNhmGPNXowwMt8eH2bAxe3N0SLFsSA6VFvfRmjeAZptJWm"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "cleartext"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "module.argo.random_password.password"
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "helm_release",
      "name": "argo-cd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": true,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argo-cd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.10.1",
                "chart": "argo-cd",
                "name": "argo-cd",
                "namespace": "argo",
                "revision": 8,
                "values": "{\"applicationSet\":{\"extraVolumeMounts\":[{\"mountPath\":\"/home/argocd/.ssh/config\",\"name\":\"config-volume\",\"subPath\":\"ssh_config\"}],\"extraVolumes\":[{\"configMap\":{\"name\":\"repo-server-ssh-cm\"},\"name\":\"config-volume\"}],\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::482235484697:role/irsa-crossform-tower-argo-ktvict22\"}}},\"configs\":{\"cm\":{\"application.resourceTrackingMethod\":\"annotation\",\"resource.customizations\":\"\\\"*.upbound.io/*\\\":\\n  health.lua: |\\n    health_status = {\\n      status = \\\"Progressing\\\",\\n      message = \\\"Provisioning ...\\\"\\n    }\\n\\n    local function contains (table, val)\\n      for i, v in ipairs(table) do\\n        if v == val then\\n          return true\\n        end\\n      end\\n      return false\\n    end\\n\\n    local has_no_status = {\\n      \\\"ProviderConfig\\\",\\n      \\\"ProviderConfigUsage\\\"\\n    }\\n\\n    if obj.status == nil or next(obj.status) == nil and contains(has_no_status, obj.kind) then\\n      health_status.status = \\\"Healthy\\\"\\n      health_status.message = \\\"Resource is up-to-date.\\\"\\n      return health_status\\n    end\\n\\n    if obj.status == nil or next(obj.status) == nil or obj.status.conditions == nil then\\n      if obj.kind == \\\"ProviderConfig\\\" and obj.status.users ~= nil then\\n        health_status.status = \\\"Healthy\\\"\\n        health_status.message = \\\"Resource is in use.\\\"\\n        return health_status\\n      end\\n      return health_status\\n    end\\n\\n    for i, condition in ipairs(obj.status.conditions) do\\n      if condition.type == \\\"LastAsyncOperation\\\" then\\n        if condition.status == \\\"False\\\" then\\n          health_status.status = \\\"Degraded\\\"\\n          health_status.message = condition.message\\n          return health_status\\n        end\\n      end\\n\\n      if condition.type == \\\"Synced\\\" then\\n        if condition.status == \\\"False\\\" then\\n          health_status.status = \\\"Degraded\\\"\\n          health_status.message = condition.message\\n          return health_status\\n        end\\n      end\\n\\n      if condition.type == \\\"Ready\\\" then\\n        if condition.status == \\\"True\\\" then\\n          health_status.status = \\\"Healthy\\\"\\n          health_status.message = \\\"Resource is up-to-date.\\\"\\n          return health_status\\n        end\\n      end\\n    end\\n\\n    return health_status\\n\\n\\\"*.crossplane.io/*\\\":\\n  health.lua: |\\n    health_status = {\\n      status = \\\"Progressing\\\",\\n      message = \\\"Provisioning ...\\\"\\n    }\\n\\n    local function contains (table, val)\\n      for i, v in ipairs(table) do\\n        if v == val then\\n          return true\\n        end\\n      end\\n      return false\\n    end\\n\\n    local has_no_status = {\\n      \\\"Composition\\\",\\n      \\\"CompositionRevision\\\",\\n      \\\"DeploymentRuntimeConfig\\\",\\n      \\\"ControllerConfig\\\",\\n      \\\"ProviderConfig\\\",\\n      \\\"ProviderConfigUsage\\\"\\n    }\\n    if obj.status == nil or next(obj.status) == nil and contains(has_no_status, obj.kind) then\\n        health_status.status = \\\"Healthy\\\"\\n        health_status.message = \\\"Resource is up-to-date.\\\"\\n      return health_status\\n    end\\n\\n    if obj.status == nil or next(obj.status) == nil or obj.status.conditions == nil then\\n      if obj.kind == \\\"ProviderConfig\\\" and obj.status.users ~= nil then\\n        health_status.status = \\\"Healthy\\\"\\n        health_status.message = \\\"Resource is in use.\\\"\\n        return health_status\\n      end\\n      return health_status\\n    end\\n\\n    for i, condition in ipairs(obj.status.conditions) do\\n      if condition.type == \\\"LastAsyncOperation\\\" then\\n        if condition.status == \\\"False\\\" then\\n          health_status.status = \\\"Degraded\\\"\\n          health_status.message = condition.message\\n          return health_status\\n        end\\n      end\\n\\n      if condition.type == \\\"Synced\\\" then\\n        if condition.status == \\\"False\\\" then\\n          health_status.status = \\\"Degraded\\\"\\n          health_status.message = condition.message\\n          return health_status\\n        end\\n      end\\n\\n      if contains({\\\"Ready\\\", \\\"Healthy\\\", \\\"Offered\\\", \\\"Established\\\"}, condition.type) then\\n        if condition.status == \\\"True\\\" then\\n          health_status.status = \\\"Healthy\\\"\\n          health_status.message = \\\"Resource is up-to-date.\\\"\\n          return health_status\\n        end\\n      end\\n    end\\n\\n    return health_status\\n\\n\\\"crossform.io/xModule\\\":\\n  health.lua: |\\n    local health_status = {\\n        status = \\\"Progressing\\\",\\n        message = \\\"Provisioning ...\\\"\\n    }\\n    local ready = false\\n\\n    if obj.status.repository.ok == false then\\n        health_status.status = \\\"Degraded\\\"\\n        health_status.message = obj.status.repository.message\\n        return health_status\\n    end\\n\\n    for i, condition in ipairs(obj.status.conditions) do\\n        if condition.type == \\\"LastAsyncOperation\\\" then\\n            if condition.status == \\\"False\\\" then\\n                health_status.status = \\\"Degraded\\\"\\n                health_status.message = condition.message\\n                return health_status\\n            end\\n        end\\n\\n        if condition.type == \\\"Synced\\\" then\\n            if condition.status == \\\"False\\\" then\\n                health_status.status = \\\"Degraded\\\"\\n                health_status.message = condition.message\\n                return health_status\\n            end\\n        end\\n\\n        if condition.type == \\\"Ready\\\" then\\n            if condition.status == \\\"True\\\" then\\n                ready = true\\n            end\\n        end\\n    end\\n\\n    if ready == false then\\n        return health_status\\n    end\\n\\n    if obj.hasErrors == false then\\n        return health_status\\n    end\\n\\n    local errors = \\\"\\\"\\n    for k, v in pairs(obj.status.report) do\\n        if k == \\\"inputsValidation\\\" then\\n            if v ~= \\\"OK\\\" then\\n                health_status.status = \\\"Degraded\\\"\\n                health_status.message = v\\n                return health_status\\n            end\\n        else\\n            for kk, vv in pairs(v) do\\n                if vv ~= \\\"OK\\\" then\\n                    errors = errors .. k .. \\\".\\\" .. kk .. \\\":\\\" .. vv .. \\\"\\\\n\\\"\\n                end\\n            end\\n        end\\n    end\\n\\n    if errors ~= \\\"\\\" then\\n        health_status.status = \\\"Degraded\\\"\\n        health_status.message = errors\\n        return health_status\\n    end\\n\\n    health_status.status = \\\"Healthy\\\"\\n    health_status.message = \\\"Resource is up-to-date.\\\"\\n    return health_status\\n\",\"resource.exclusions\":\"- apiGroups:\\n  - \\\"*\\\"\\n  kinds:\\n  - ProviderConfigUsage\\n\"},\"params\":{\"application.namespaces\":\"*\",\"server.insecure\":true},\"secret\":{\"argocdServerAdminPassword\":\"$2a$10$DWhME8LkNhmGPNXowwMt8eH2bAxe3N0SLFsSA6VFvfRmjeAZptJWm\"},\"ssh\":{\"knownHosts\":\"[ssh.github.com]:443 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=\\n[ssh.github.com]:443 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl\\n[ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=\\nbitbucket.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPIQmuzMBuKdWeF4+a2sjSSpBK0iqitSQ+5BM9KhpexuGt20JpTVM7u5BDZngncgrqDMbWdxMWWOGtZ9UgbqgZE=\\nbitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO\\nbitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDQeJzhupRu0u0cdegZIa8e86EG2qOCsIsD1Xw0xSeiPDlCr7kq97NLmMbpKTX6Esc30NuoqEEHCuc7yWtwp8dI76EEEB1VqY9QJq6vk+aySyboD5QF61I/1WeTwu+deCbgKMGbUijeXhtfbxSxm6JwGrXrhBdofTsbKRUsrN1WoNgUa8uqN1Vx6WAJw1JHPhglEGGHea6QICwJOAr/6mrui/oB7pkaWKHj3z7d1IC4KWLtY47elvjbaTlkN04Kc/5LFEirorGYVbt15kAUlqGM65pk6ZBxtaO3+30LVlORZkxOh+LKL/BvbZ/iRNhItLqNyieoQj/uh/7Iv4uyH/cV/0b4WDSd3DptigWq84lJubb9t/DnZlrJazxyDCulTmKdOR7vs9gMTo+uoIrPSb8ScTtvw65+odKAlBj59dhnVp9zd7QUojOpXlL62Aw56U4oO+FALuevvMjiWeavKhJqlR7i5n9srYcrNV7ttmDw7kf/97P5zauIhxcjX+xHv4M=\\ngithub.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=\\ngithub.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl\\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=\\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\\n\"}},\"controller\":{\"metrics\":{\"enabled\":true},\"podAnnotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":\"8082\",\"prometheus.io/scrape\":\"true\"},\"resources\":{\"limits\":{\"cpu\":2,\"memory\":\"4Gi\"},\"requests\":{\"cpu\":\"250m\",\"memory\":\"1Gi\"}},\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::482235484697:role/irsa-crossform-tower-argo-ktvict22\"}}},\"global\":{\"logging\":{\"level\":\"debug\"},\"securityContext\":{\"fsGroup\":999}},\"repoServer\":{\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"512Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/home/argocd/.ssh/config\",\"name\":\"config-volume\",\"subPath\":\"ssh_config\"}],\"volumes\":[{\"configMap\":{\"name\":\"repo-server-ssh-cm\"},\"name\":\"config-volume\"}]},\"server\":{\"configEnabled\":true,\"extraArgs\":[\"--insecure\"],\"ingress\":{\"annotations\":{\"alb.ingress.kubernetes.io/listen-ports\":\"[{\\\"HTTPS\\\":443}]\",\"alb.ingress.kubernetes.io/load-balancer-attributes\":\"routing.http.drop_invalid_header_fields.enabled=true\",\"alb.ingress.kubernetes.io/load-balancer-name\":\"argo\",\"alb.ingress.kubernetes.io/scheme\":\"internet-facing\",\"alb.ingress.kubernetes.io/target-type\":\"ip\",\"external-dns.kubernetes.io/enable\":\"true\"},\"enabled\":true,\"hostname\":\"argo.tower.crossform.io\",\"https\":false,\"ingressClassName\":\"alb\",\"tls\":[{\"hosts\":[\"argo.tower.crossform.io\"],\"secretName\":\"myingress-cert\"}]},\"ingressGrpc\":{\"annotations\":{\"alb.ingress.kubernetes.io/listen-ports\":\"[{\\\"HTTPS\\\":443}]\",\"alb.ingress.kubernetes.io/load-balancer-name\":\"argo-grpc\",\"alb.ingress.kubernetes.io/scheme\":\"internet-facing\",\"external-dns.kubernetes.io/enable\":false},\"awsALB\":{\"serviceType\":\"NodePort\"},\"enabled\":false,\"hostname\":\"argo-grpc.tower.crossform.io\",\"https\":false,\"ingressClassName\":\"alb\",\"isAWSALB\":false},\"resources\":{\"limits\":{\"cpu\":1,\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"256Mi\"}},\"service\":{\"type\":\"NodePort\"},\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::482235484697:role/irsa-crossform-tower-argo-ktvict22\"}}}}",
                "version": "6.4.1"
              }
            ],
            "name": "argo-cd",
            "namespace": "argo",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "configs.params.server\\.insecure",
                "type": "",
                "value": "true"
              },
              {
                "name": "configs.secret.argocdServerAdminPassword",
                "type": "",
                "value": "$2a$10$DWhME8LkNhmGPNXowwMt8eH2bAxe3N0SLFsSA6VFvfRmjeAZptJWm"
              },
              {
                "name": "controller.metrics.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "server.configEnabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "server.extraArgs[0]",
                "type": "",
                "value": "--insecure"
              },
              {
                "name": "server.ingressGrpc.annotations.alb\\.ingress\\.kubernetes\\.io/listen-ports",
                "type": "",
                "value": "\\[{\"HTTPS\":443}\\]"
              },
              {
                "name": "server.ingressGrpc.annotations.alb\\.ingress\\.kubernetes\\.io/load-balancer-name",
                "type": "",
                "value": "argo-grpc"
              },
              {
                "name": "server.ingressGrpc.annotations.alb\\.ingress\\.kubernetes\\.io/scheme",
                "type": "",
                "value": "internet-facing"
              },
              {
                "name": "server.ingressGrpc.annotations.external-dns\\.kubernetes\\.io/enable",
                "type": "",
                "value": "false"
              },
              {
                "name": "server.ingressGrpc.awsALB.serviceType",
                "type": "",
                "value": "NodePort"
              },
              {
                "name": "server.ingressGrpc.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "server.ingressGrpc.hostname",
                "type": "",
                "value": "argo-grpc.tower.crossform.io"
              },
              {
                "name": "server.ingressGrpc.https",
                "type": "",
                "value": "false"
              },
              {
                "name": "server.ingressGrpc.ingressClassName",
                "type": "",
                "value": "alb"
              },
              {
                "name": "server.ingressGrpc.isAWSALB",
                "type": "",
                "value": "false"
              },
              {
                "name": "server.service.type",
                "type": "",
                "value": "NodePort"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "global:\n  logging:\n    level: debug\n  securityContext:\n    fsGroup: 999\nrepoServer:\n  resources:\n    limits:\n      cpu: 500m\n      memory: 512Mi\n  volumes:\n    - name: config-volume\n      configMap:\n        name: repo-server-ssh-cm\n  volumeMounts:\n    - name: config-volume\n      mountPath: /home/argocd/.ssh/config\n      subPath: ssh_config\napplicationSet:\n  serviceAccount:\n    annotations:\n      eks.amazonaws.com/role-arn: arn:aws:iam::482235484697:role/irsa-crossform-tower-argo-ktvict22\n  extraVolumes:\n    - name: config-volume\n      configMap:\n        name: repo-server-ssh-cm\n  extraVolumeMounts:\n    - name: config-volume\n      mountPath: /home/argocd/.ssh/config\n      subPath: ssh_config\ncontroller:\n  serviceAccount:\n    annotations:\n      eks.amazonaws.com/role-arn: arn:aws:iam::482235484697:role/irsa-crossform-tower-argo-ktvict22\n  resources:\n    limits:\n      cpu: 2\n      memory: 4Gi\n    requests:\n      cpu: 250m\n      memory: 1Gi\n  podAnnotations:\n    prometheus.io/scrape: \"true\"\n    prometheus.io/port: \"8082\"\n    prometheus.io/path: \"/metrics\"\nserver:\n  serviceAccount:\n    annotations:\n      eks.amazonaws.com/role-arn: arn:aws:iam::482235484697:role/irsa-crossform-tower-argo-ktvict22\n  resources:\n    limits:\n      cpu: 1\n      memory: 512Mi\n    requests:\n      cpu: 100m\n      memory: 256Mi\n  ingress:\n    enabled: true\n    hostname: argo.tower.crossform.io\n    ingressClassName: alb\n    https: false\n    tls:\n      - hosts:\n        - argo.tower.crossform.io\n        secretName: myingress-cert\n    annotations:\n      alb.ingress.kubernetes.io/load-balancer-attributes: routing.http.drop_invalid_header_fields.enabled=true\n      external-dns.kubernetes.io/enable: true\n      alb.ingress.kubernetes.io/scheme: internet-facing\n      external-dns.kubernetes.io/enable: \"true\"\n      alb.ingress.kubernetes.io/listen-ports: '[{\"HTTPS\":443}]'\n      alb.ingress.kubernetes.io/load-balancer-name: argo\n      alb.ingress.kubernetes.io/target-type: ip\n\nconfigs:\n  params:\n    application.namespaces: \"*\"\n  ssh:\n    knownHosts: |\n      [ssh.github.com]:443 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=\n      [ssh.github.com]:443 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl\n      [ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=\n      bitbucket.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPIQmuzMBuKdWeF4+a2sjSSpBK0iqitSQ+5BM9KhpexuGt20JpTVM7u5BDZngncgrqDMbWdxMWWOGtZ9UgbqgZE=\n      bitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO\n      bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDQeJzhupRu0u0cdegZIa8e86EG2qOCsIsD1Xw0xSeiPDlCr7kq97NLmMbpKTX6Esc30NuoqEEHCuc7yWtwp8dI76EEEB1VqY9QJq6vk+aySyboD5QF61I/1WeTwu+deCbgKMGbUijeXhtfbxSxm6JwGrXrhBdofTsbKRUsrN1WoNgUa8uqN1Vx6WAJw1JHPhglEGGHea6QICwJOAr/6mrui/oB7pkaWKHj3z7d1IC4KWLtY47elvjbaTlkN04Kc/5LFEirorGYVbt15kAUlqGM65pk6ZBxtaO3+30LVlORZkxOh+LKL/BvbZ/iRNhItLqNyieoQj/uh/7Iv4uyH/cV/0b4WDSd3DptigWq84lJubb9t/DnZlrJazxyDCulTmKdOR7vs9gMTo+uoIrPSb8ScTtvw65+odKAlBj59dhnVp9zd7QUojOpXlL62Aw56U4oO+FALuevvMjiWeavKhJqlR7i5n9srYcrNV7ttmDw7kf/97P5zauIhxcjX+xHv4M=\n      github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=\n      github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl\n      github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=\n      gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\n      gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\n      gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\n      ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n      vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n\n\n  cm:\n    application.resourceTrackingMethod: annotation\n\n    resource.exclusions: |\n      - apiGroups:\n        - \"*\"\n        kinds:\n        - ProviderConfigUsage\n    resource.customizations: |\n      \"*.upbound.io/*\":\n        health.lua: |\n          health_status = {\n            status = \"Progressing\",\n            message = \"Provisioning ...\"\n          }\n\n          local function contains (table, val)\n            for i, v in ipairs(table) do\n              if v == val then\n                return true\n              end\n            end\n            return false\n          end\n\n          local has_no_status = {\n            \"ProviderConfig\",\n            \"ProviderConfigUsage\"\n          }\n\n          if obj.status == nil or next(obj.status) == nil and contains(has_no_status, obj.kind) then\n            health_status.status = \"Healthy\"\n            health_status.message = \"Resource is up-to-date.\"\n            return health_status\n          end\n\n          if obj.status == nil or next(obj.status) == nil or obj.status.conditions == nil then\n            if obj.kind == \"ProviderConfig\" and obj.status.users ~= nil then\n              health_status.status = \"Healthy\"\n              health_status.message = \"Resource is in use.\"\n              return health_status\n            end\n            return health_status\n          end\n\n          for i, condition in ipairs(obj.status.conditions) do\n            if condition.type == \"LastAsyncOperation\" then\n              if condition.status == \"False\" then\n                health_status.status = \"Degraded\"\n                health_status.message = condition.message\n                return health_status\n              end\n            end\n\n            if condition.type == \"Synced\" then\n              if condition.status == \"False\" then\n                health_status.status = \"Degraded\"\n                health_status.message = condition.message\n                return health_status\n              end\n            end\n\n            if condition.type == \"Ready\" then\n              if condition.status == \"True\" then\n                health_status.status = \"Healthy\"\n                health_status.message = \"Resource is up-to-date.\"\n                return health_status\n              end\n            end\n          end\n\n          return health_status\n\n      \"*.crossplane.io/*\":\n        health.lua: |\n          health_status = {\n            status = \"Progressing\",\n            message = \"Provisioning ...\"\n          }\n\n          local function contains (table, val)\n            for i, v in ipairs(table) do\n              if v == val then\n                return true\n              end\n            end\n            return false\n          end\n\n          local has_no_status = {\n            \"Composition\",\n            \"CompositionRevision\",\n            \"DeploymentRuntimeConfig\",\n            \"ControllerConfig\",\n            \"ProviderConfig\",\n            \"ProviderConfigUsage\"\n          }\n          if obj.status == nil or next(obj.status) == nil and contains(has_no_status, obj.kind) then\n              health_status.status = \"Healthy\"\n              health_status.message = \"Resource is up-to-date.\"\n            return health_status\n          end\n\n          if obj.status == nil or next(obj.status) == nil or obj.status.conditions == nil then\n            if obj.kind == \"ProviderConfig\" and obj.status.users ~= nil then\n              health_status.status = \"Healthy\"\n              health_status.message = \"Resource is in use.\"\n              return health_status\n            end\n            return health_status\n          end\n\n          for i, condition in ipairs(obj.status.conditions) do\n            if condition.type == \"LastAsyncOperation\" then\n              if condition.status == \"False\" then\n                health_status.status = \"Degraded\"\n                health_status.message = condition.message\n                return health_status\n              end\n            end\n\n            if condition.type == \"Synced\" then\n              if condition.status == \"False\" then\n                health_status.status = \"Degraded\"\n                health_status.message = condition.message\n                return health_status\n              end\n            end\n\n            if contains({\"Ready\", \"Healthy\", \"Offered\", \"Established\"}, condition.type) then\n              if condition.status == \"True\" then\n                health_status.status = \"Healthy\"\n                health_status.message = \"Resource is up-to-date.\"\n                return health_status\n              end\n            end\n          end\n\n          return health_status\n\n      \"crossform.io/xModule\":\n        health.lua: |\n          local health_status = {\n              status = \"Progressing\",\n              message = \"Provisioning ...\"\n          }\n          local ready = false\n\n          if obj.status.repository.ok == false then\n              health_status.status = \"Degraded\"\n              health_status.message = obj.status.repository.message\n              return health_status\n          end\n\n          for i, condition in ipairs(obj.status.conditions) do\n              if condition.type == \"LastAsyncOperation\" then\n                  if condition.status == \"False\" then\n                      health_status.status = \"Degraded\"\n                      health_status.message = condition.message\n                      return health_status\n                  end\n              end\n\n              if condition.type == \"Synced\" then\n                  if condition.status == \"False\" then\n                      health_status.status = \"Degraded\"\n                      health_status.message = condition.message\n                      return health_status\n                  end\n              end\n\n              if condition.type == \"Ready\" then\n                  if condition.status == \"True\" then\n                      ready = true\n                  end\n              end\n          end\n\n          if ready == false then\n              return health_status\n          end\n\n          if obj.hasErrors == false then\n              return health_status\n          end\n\n          local errors = \"\"\n          for k, v in pairs(obj.status.report) do\n              if k == \"inputsValidation\" then\n                  if v ~= \"OK\" then\n                      health_status.status = \"Degraded\"\n                      health_status.message = v\n                      return health_status\n                  end\n              else\n                  for kk, vv in pairs(v) do\n                      if vv ~= \"OK\" then\n                          errors = errors .. k .. \".\" .. kk .. \":\" .. vv .. \"\\n\"\n                      end\n                  end\n              end\n          end\n\n          if errors ~= \"\" then\n              health_status.status = \"Degraded\"\n              health_status.message = errors\n              return health_status\n          end\n\n          health_status.status = \"Healthy\"\n          health_status.message = \"Resource is up-to-date.\"\n          return health_status\n"
            ],
            "verify": false,
            "version": "6.4.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.argo.bcrypt_hash.argo_pass",
            "module.argo.kubernetes_config_map.argo_ssh",
            "module.argo.kubernetes_namespace.argo",
            "module.argo.kubernetes_secret_v1.argo_wf_sso_secret",
            "module.argo.module.irsa_argo.aws_iam_role.irsa",
            "module.argo.module.irsa_argo.data.aws_caller_identity.current",
            "module.argo.module.irsa_argo.data.aws_iam_policy_document.this",
            "module.argo.module.irsa_argo.data.aws_partition.current",
            "module.argo.module.irsa_argo.random_string.random",
            "module.argo.random_password.argo_wf_client_secret",
            "module.argo.random_password.password",
            "module.argo.random_string.argo_wf_client_id",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding_v1",
      "name": "argo_notification",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "argocd-notifications-controller-cluster-apps",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "argocd-notifications-controller-cluster-apps",
                "resource_version": "12478",
                "uid": "beabbc59-877c-45bb-8282-403de28b0c30"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "argocd-notifications-controller-cluster-apps"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "argocd-notifications-controller",
                "namespace": "argo"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.argo.kubernetes_cluster_role_v1.argo_notification",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding_v1",
      "name": "argo_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "argocd-server-cluster-apps",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "argocd-server-cluster-apps",
                "resource_version": "12476",
                "uid": "9af27a10-e7e0-454b-a13c-4b556d68e962"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "argocd-server-cluster-apps"
              }
            ],
            "subject": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "User",
                "name": "admin",
                "namespace": "default"
              },
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "argocd-server",
                "namespace": "argo"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.argo.kubernetes_cluster_role_v1.argo_server",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "kubernetes_cluster_role_v1",
      "name": "argo_notification",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "aggregation_rule": [],
            "id": "argocd-notifications-controller-cluster-apps",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "argocd-notifications-controller-cluster-apps",
                "resource_version": "12467",
                "uid": "a370e870-84f8-470f-a527-6076a45ec0bd"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "secrets",
                  "configmaps"
                ],
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "argoproj.io"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "applications"
                ],
                "verbs": [
                  "get",
                  "list",
                  "watch",
                  "update",
                  "patch"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "kubernetes_cluster_role_v1",
      "name": "argo_server",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "aggregation_rule": [],
            "id": "argocd-server-cluster-apps",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "argocd-server-cluster-apps",
                "resource_version": "12469",
                "uid": "464bcd17-5e2c-4a03-932c-d8848f2f89fc"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "events"
                ],
                "verbs": [
                  "create"
                ]
              },
              {
                "api_groups": [
                  "argoproj.io"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "applications"
                ],
                "verbs": [
                  "create",
                  "delete",
                  "update",
                  "patch"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "argo_ssh",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "ssh_config": "Include /etc/ssh/ssh_config.d/*.conf\nHOST *\nStrictHostKeyChecking no\nHost vs-ssh.visualstudio.com\nHostkeyAlgorithms +ssh-rsa\nPubkeyAcceptedAlgorithms +ssh-rsa\n"
            },
            "id": "argo/repo-server-ssh-cm",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "repo-server-ssh-cm",
                "namespace": "argo",
                "resource_version": "12477",
                "uid": "7dc8df05-1685-4e5b-a066-28db1e7f3d4c"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.argo.kubernetes_namespace.argo",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "kubernetes_manifest",
      "name": "argo_base",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "computed_fields": null,
            "field_manager": [],
            "manifest": {
              "value": {
                "apiVersion": "argoproj.io/v1alpha1",
                "kind": "Application",
                "metadata": {
                  "annotations": {
                    "argocd.argoproj.io/sync-options": "SkipDryRunOnMissingResource=true"
                  },
                  "name": "argo-base",
                  "namespace": "argo"
                },
                "spec": {
                  "destination": {
                    "namespace": "argo",
                    "server": "https://kubernetes.default.svc"
                  },
                  "ignoreDifferences": [
                    {
                      "group": "datadoghq.com",
                      "jsonPointers": [
                        "/spec/tags"
                      ],
                      "kind": "DatadogMonitor"
                    }
                  ],
                  "project": "default",
                  "source": {
                    "directory": {
                      "jsonnet": {
                        "extVars": [
                          {
                            "name": "repo_url",
                            "value": "git@github.com:zefir01/crossform.git"
                          },
                          {
                            "name": "revision",
                            "value": "main"
                          }
                        ]
                      }
                    },
                    "path": "examples/argo-base",
                    "repoURL": "git@github.com:zefir01/crossform.git",
                    "targetRevision": "main"
                  },
                  "syncPolicy": {
                    "automated": {
                      "prune": true,
                      "selfHeal": true
                    },
                    "retry": {
                      "backoff": {
                        "duration": "5s",
                        "factor": 2,
                        "maxDuration": "3m"
                      },
                      "limit": 7
                    },
                    "syncOptions": [
                      "CreateNamespace=true",
                      "ApplyOutOfSyncOnly=true",
                      "RespectIgnoreDifferences=true",
                      "ServerSideApply=true",
                      "SkipDryRunOnMissingResource=true"
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "object",
                        {
                          "argocd.argoproj.io/sync-options": "string"
                        }
                      ],
                      "name": "string",
                      "namespace": "string"
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "destination": [
                        "object",
                        {
                          "namespace": "string",
                          "server": "string"
                        }
                      ],
                      "ignoreDifferences": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "group": "string",
                              "jsonPointers": [
                                "tuple",
                                [
                                  "string"
                                ]
                              ],
                              "kind": "string"
                            }
                          ]
                        ]
                      ],
                      "project": "string",
                      "source": [
                        "object",
                        {
                          "directory": [
                            "object",
                            {
                              "jsonnet": [
                                "object",
                                {
                                  "extVars": [
                                    "tuple",
                                    [
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string"
                                        }
                                      ],
                                      [
                                        "object",
                                        {
                                          "name": "string",
                                          "value": "string"
                                        }
                                      ]
                                    ]
                                  ]
                                }
                              ]
                            }
                          ],
                          "path": "string",
                          "repoURL": "string",
                          "targetRevision": "string"
                        }
                      ],
                      "syncPolicy": [
                        "object",
                        {
                          "automated": [
                            "object",
                            {
                              "prune": "bool",
                              "selfHeal": "bool"
                            }
                          ],
                          "retry": [
                            "object",
                            {
                              "backoff": [
                                "object",
                                {
                                  "duration": "string",
                                  "factor": "number",
                                  "maxDuration": "string"
                                }
                              ],
                              "limit": "number"
                            }
                          ],
                          "syncOptions": [
                            "tuple",
                            [
                              "string",
                              "string",
                              "string",
                              "string",
                              "string"
                            ]
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "object": {
              "value": {
                "apiVersion": "argoproj.io/v1alpha1",
                "kind": "Application",
                "metadata": {
                  "annotations": {
                    "argocd.argoproj.io/sync-options": "SkipDryRunOnMissingResource=true"
                  },
                  "creationTimestamp": null,
                  "deletionGracePeriodSeconds": null,
                  "deletionTimestamp": null,
                  "finalizers": null,
                  "generateName": null,
                  "generation": null,
                  "labels": null,
                  "managedFields": null,
                  "name": "argo-base",
                  "namespace": "argo",
                  "ownerReferences": null,
                  "resourceVersion": null,
                  "selfLink": null,
                  "uid": null
                },
                "operation": {
                  "info": null,
                  "initiatedBy": {
                    "automated": null,
                    "username": null
                  },
                  "retry": {
                    "backoff": {
                      "duration": null,
                      "factor": null,
                      "maxDuration": null
                    },
                    "limit": null
                  },
                  "sync": {
                    "dryRun": null,
                    "manifests": null,
                    "prune": null,
                    "resources": null,
                    "revision": null,
                    "revisions": null,
                    "source": {
                      "chart": null,
                      "directory": {
                        "exclude": null,
                        "include": null,
                        "jsonnet": {
                          "extVars": null,
                          "libs": null,
                          "tlas": null
                        },
                        "recurse": null
                      },
                      "helm": {
                        "fileParameters": null,
                        "ignoreMissingValueFiles": null,
                        "parameters": null,
                        "passCredentials": null,
                        "releaseName": null,
                        "skipCrds": null,
                        "valueFiles": null,
                        "values": null,
                        "valuesObject": null,
                        "version": null
                      },
                      "kustomize": {
                        "commonAnnotations": null,
                        "commonAnnotationsEnvsubst": null,
                        "commonLabels": null,
                        "components": null,
                        "forceCommonAnnotations": null,
                        "forceCommonLabels": null,
                        "images": null,
                        "namePrefix": null,
                        "nameSuffix": null,
                        "namespace": null,
                        "patches": null,
                        "replicas": null,
                        "version": null
                      },
                      "path": null,
                      "plugin": {
                        "env": null,
                        "name": null,
                        "parameters": null
                      },
                      "ref": null,
                      "repoURL": null,
                      "targetRevision": null
                    },
                    "sources": null,
                    "syncOptions": null,
                    "syncStrategy": {
                      "apply": {
                        "force": null
                      },
                      "hook": {
                        "force": null
                      }
                    }
                  }
                },
                "spec": {
                  "destination": {
                    "name": null,
                    "namespace": "argo",
                    "server": "https://kubernetes.default.svc"
                  },
                  "ignoreDifferences": [
                    {
                      "group": "datadoghq.com",
                      "jqPathExpressions": null,
                      "jsonPointers": [
                        "/spec/tags"
                      ],
                      "kind": "DatadogMonitor",
                      "managedFieldsManagers": null,
                      "name": null,
                      "namespace": null
                    }
                  ],
                  "info": null,
                  "project": "default",
                  "revisionHistoryLimit": null,
                  "source": {
                    "chart": null,
                    "directory": {
                      "exclude": null,
                      "include": null,
                      "jsonnet": {
                        "extVars": [
                          {
                            "code": null,
                            "name": "repo_url",
                            "value": "git@github.com:zefir01/crossform.git"
                          },
                          {
                            "code": null,
                            "name": "revision",
                            "value": "main"
                          }
                        ],
                        "libs": null,
                        "tlas": null
                      },
                      "recurse": null
                    },
                    "helm": {
                      "fileParameters": null,
                      "ignoreMissingValueFiles": null,
                      "parameters": null,
                      "passCredentials": null,
                      "releaseName": null,
                      "skipCrds": null,
                      "valueFiles": null,
                      "values": null,
                      "valuesObject": null,
                      "version": null
                    },
                    "kustomize": {
                      "commonAnnotations": null,
                      "commonAnnotationsEnvsubst": null,
                      "commonLabels": null,
                      "components": null,
                      "forceCommonAnnotations": null,
                      "forceCommonLabels": null,
                      "images": null,
                      "namePrefix": null,
                      "nameSuffix": null,
                      "namespace": null,
                      "patches": null,
                      "replicas": null,
                      "version": null
                    },
                    "path": "examples/argo-base",
                    "plugin": {
                      "env": null,
                      "name": null,
                      "parameters": null
                    },
                    "ref": null,
                    "repoURL": "git@github.com:zefir01/crossform.git",
                    "targetRevision": "main"
                  },
                  "sources": null,
                  "syncPolicy": {
                    "automated": {
                      "allowEmpty": null,
                      "prune": true,
                      "selfHeal": true
                    },
                    "managedNamespaceMetadata": {
                      "annotations": null,
                      "labels": null
                    },
                    "retry": {
                      "backoff": {
                        "duration": "5s",
                        "factor": 2,
                        "maxDuration": "3m"
                      },
                      "limit": 7
                    },
                    "syncOptions": [
                      "CreateNamespace=true",
                      "ApplyOutOfSyncOnly=true",
                      "RespectIgnoreDifferences=true",
                      "ServerSideApply=true",
                      "SkipDryRunOnMissingResource=true"
                    ]
                  }
                }
              },
              "type": [
                "object",
                {
                  "apiVersion": "string",
                  "kind": "string",
                  "metadata": [
                    "object",
                    {
                      "annotations": [
                        "map",
                        "string"
                      ],
                      "creationTimestamp": "string",
                      "deletionGracePeriodSeconds": "number",
                      "deletionTimestamp": "string",
                      "finalizers": [
                        "list",
                        "string"
                      ],
                      "generateName": "string",
                      "generation": "number",
                      "labels": [
                        "map",
                        "string"
                      ],
                      "managedFields": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "apiVersion": "string",
                              "fieldsType": "string",
                              "fieldsV1": "dynamic",
                              "manager": "string",
                              "operation": "string",
                              "subresource": "string",
                              "time": "string"
                            }
                          ]
                        ]
                      ],
                      "name": "string",
                      "namespace": "string",
                      "ownerReferences": [
                        "list",
                        [
                          "object",
                          {
                            "apiVersion": "string",
                            "blockOwnerDeletion": "bool",
                            "controller": "bool",
                            "kind": "string",
                            "name": "string",
                            "uid": "string"
                          }
                        ]
                      ],
                      "resourceVersion": "string",
                      "selfLink": "string",
                      "uid": "string"
                    }
                  ],
                  "operation": [
                    "object",
                    {
                      "info": [
                        "list",
                        [
                          "object",
                          {
                            "name": "string",
                            "value": "string"
                          }
                        ]
                      ],
                      "initiatedBy": [
                        "object",
                        {
                          "automated": "bool",
                          "username": "string"
                        }
                      ],
                      "retry": [
                        "object",
                        {
                          "backoff": [
                            "object",
                            {
                              "duration": "string",
                              "factor": "number",
                              "maxDuration": "string"
                            }
                          ],
                          "limit": "number"
                        }
                      ],
                      "sync": [
                        "object",
                        {
                          "dryRun": "bool",
                          "manifests": [
                            "list",
                            "string"
                          ],
                          "prune": "bool",
                          "resources": [
                            "list",
                            [
                              "object",
                              {
                                "group": "string",
                                "kind": "string",
                                "name": "string",
                                "namespace": "string"
                              }
                            ]
                          ],
                          "revision": "string",
                          "revisions": [
                            "list",
                            "string"
                          ],
                          "source": [
                            "object",
                            {
                              "chart": "string",
                              "directory": [
                                "object",
                                {
                                  "exclude": "string",
                                  "include": "string",
                                  "jsonnet": [
                                    "object",
                                    {
                                      "extVars": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "code": "bool",
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "libs": [
                                        "list",
                                        "string"
                                      ],
                                      "tlas": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "code": "bool",
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  ],
                                  "recurse": "bool"
                                }
                              ],
                              "helm": [
                                "object",
                                {
                                  "fileParameters": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "path": "string"
                                      }
                                    ]
                                  ],
                                  "ignoreMissingValueFiles": "bool",
                                  "parameters": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "forceString": "bool",
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "passCredentials": "bool",
                                  "releaseName": "string",
                                  "skipCrds": "bool",
                                  "valueFiles": [
                                    "list",
                                    "string"
                                  ],
                                  "values": "string",
                                  "valuesObject": "dynamic",
                                  "version": "string"
                                }
                              ],
                              "kustomize": [
                                "object",
                                {
                                  "commonAnnotations": [
                                    "map",
                                    "string"
                                  ],
                                  "commonAnnotationsEnvsubst": "bool",
                                  "commonLabels": [
                                    "map",
                                    "string"
                                  ],
                                  "components": [
                                    "list",
                                    "string"
                                  ],
                                  "forceCommonAnnotations": "bool",
                                  "forceCommonLabels": "bool",
                                  "images": [
                                    "list",
                                    "string"
                                  ],
                                  "namePrefix": "string",
                                  "nameSuffix": "string",
                                  "namespace": "string",
                                  "patches": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "options": [
                                          "map",
                                          "bool"
                                        ],
                                        "patch": "string",
                                        "path": "string",
                                        "target": [
                                          "object",
                                          {
                                            "annotationSelector": "string",
                                            "group": "string",
                                            "kind": "string",
                                            "labelSelector": "string",
                                            "name": "string",
                                            "namespace": "string",
                                            "version": "string"
                                          }
                                        ]
                                      }
                                    ]
                                  ],
                                  "replicas": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "count": "string",
                                        "name": "string"
                                      }
                                    ]
                                  ],
                                  "version": "string"
                                }
                              ],
                              "path": "string",
                              "plugin": [
                                "object",
                                {
                                  "env": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "name": "string",
                                  "parameters": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "array": [
                                          "list",
                                          "string"
                                        ],
                                        "map": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "string": "string"
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "ref": "string",
                              "repoURL": "string",
                              "targetRevision": "string"
                            }
                          ],
                          "sources": [
                            "tuple",
                            [
                              [
                                "object",
                                {
                                  "chart": "string",
                                  "directory": [
                                    "object",
                                    {
                                      "exclude": "string",
                                      "include": "string",
                                      "jsonnet": [
                                        "object",
                                        {
                                          "extVars": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "code": "bool",
                                                "name": "string",
                                                "value": "string"
                                              }
                                            ]
                                          ],
                                          "libs": [
                                            "list",
                                            "string"
                                          ],
                                          "tlas": [
                                            "list",
                                            [
                                              "object",
                                              {
                                                "code": "bool",
                                                "name": "string",
                                                "value": "string"
                                              }
                                            ]
                                          ]
                                        }
                                      ],
                                      "recurse": "bool"
                                    }
                                  ],
                                  "helm": [
                                    "object",
                                    {
                                      "fileParameters": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "path": "string"
                                          }
                                        ]
                                      ],
                                      "ignoreMissingValueFiles": "bool",
                                      "parameters": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "forceString": "bool",
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "passCredentials": "bool",
                                      "releaseName": "string",
                                      "skipCrds": "bool",
                                      "valueFiles": [
                                        "list",
                                        "string"
                                      ],
                                      "values": "string",
                                      "valuesObject": "dynamic",
                                      "version": "string"
                                    }
                                  ],
                                  "kustomize": [
                                    "object",
                                    {
                                      "commonAnnotations": [
                                        "map",
                                        "string"
                                      ],
                                      "commonAnnotationsEnvsubst": "bool",
                                      "commonLabels": [
                                        "map",
                                        "string"
                                      ],
                                      "components": [
                                        "list",
                                        "string"
                                      ],
                                      "forceCommonAnnotations": "bool",
                                      "forceCommonLabels": "bool",
                                      "images": [
                                        "list",
                                        "string"
                                      ],
                                      "namePrefix": "string",
                                      "nameSuffix": "string",
                                      "namespace": "string",
                                      "patches": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "options": [
                                              "map",
                                              "bool"
                                            ],
                                            "patch": "string",
                                            "path": "string",
                                            "target": [
                                              "object",
                                              {
                                                "annotationSelector": "string",
                                                "group": "string",
                                                "kind": "string",
                                                "labelSelector": "string",
                                                "name": "string",
                                                "namespace": "string",
                                                "version": "string"
                                              }
                                            ]
                                          }
                                        ]
                                      ],
                                      "replicas": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "count": "string",
                                            "name": "string"
                                          }
                                        ]
                                      ],
                                      "version": "string"
                                    }
                                  ],
                                  "path": "string",
                                  "plugin": [
                                    "object",
                                    {
                                      "env": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "name": "string",
                                      "parameters": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "array": [
                                              "list",
                                              "string"
                                            ],
                                            "map": [
                                              "map",
                                              "string"
                                            ],
                                            "name": "string",
                                            "string": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  ],
                                  "ref": "string",
                                  "repoURL": "string",
                                  "targetRevision": "string"
                                }
                              ]
                            ]
                          ],
                          "syncOptions": [
                            "list",
                            "string"
                          ],
                          "syncStrategy": [
                            "object",
                            {
                              "apply": [
                                "object",
                                {
                                  "force": "bool"
                                }
                              ],
                              "hook": [
                                "object",
                                {
                                  "force": "bool"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "spec": [
                    "object",
                    {
                      "destination": [
                        "object",
                        {
                          "name": "string",
                          "namespace": "string",
                          "server": "string"
                        }
                      ],
                      "ignoreDifferences": [
                        "list",
                        [
                          "object",
                          {
                            "group": "string",
                            "jqPathExpressions": [
                              "list",
                              "string"
                            ],
                            "jsonPointers": [
                              "list",
                              "string"
                            ],
                            "kind": "string",
                            "managedFieldsManagers": [
                              "list",
                              "string"
                            ],
                            "name": "string",
                            "namespace": "string"
                          }
                        ]
                      ],
                      "info": [
                        "list",
                        [
                          "object",
                          {
                            "name": "string",
                            "value": "string"
                          }
                        ]
                      ],
                      "project": "string",
                      "revisionHistoryLimit": "number",
                      "source": [
                        "object",
                        {
                          "chart": "string",
                          "directory": [
                            "object",
                            {
                              "exclude": "string",
                              "include": "string",
                              "jsonnet": [
                                "object",
                                {
                                  "extVars": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "code": "bool",
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "libs": [
                                    "list",
                                    "string"
                                  ],
                                  "tlas": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "code": "bool",
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "recurse": "bool"
                            }
                          ],
                          "helm": [
                            "object",
                            {
                              "fileParameters": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "path": "string"
                                  }
                                ]
                              ],
                              "ignoreMissingValueFiles": "bool",
                              "parameters": [
                                "list",
                                [
                                  "object",
                                  {
                                    "forceString": "bool",
                                    "name": "string",
                                    "value": "string"
                                  }
                                ]
                              ],
                              "passCredentials": "bool",
                              "releaseName": "string",
                              "skipCrds": "bool",
                              "valueFiles": [
                                "list",
                                "string"
                              ],
                              "values": "string",
                              "valuesObject": "dynamic",
                              "version": "string"
                            }
                          ],
                          "kustomize": [
                            "object",
                            {
                              "commonAnnotations": [
                                "map",
                                "string"
                              ],
                              "commonAnnotationsEnvsubst": "bool",
                              "commonLabels": [
                                "map",
                                "string"
                              ],
                              "components": [
                                "list",
                                "string"
                              ],
                              "forceCommonAnnotations": "bool",
                              "forceCommonLabels": "bool",
                              "images": [
                                "list",
                                "string"
                              ],
                              "namePrefix": "string",
                              "nameSuffix": "string",
                              "namespace": "string",
                              "patches": [
                                "list",
                                [
                                  "object",
                                  {
                                    "options": [
                                      "map",
                                      "bool"
                                    ],
                                    "patch": "string",
                                    "path": "string",
                                    "target": [
                                      "object",
                                      {
                                        "annotationSelector": "string",
                                        "group": "string",
                                        "kind": "string",
                                        "labelSelector": "string",
                                        "name": "string",
                                        "namespace": "string",
                                        "version": "string"
                                      }
                                    ]
                                  }
                                ]
                              ],
                              "replicas": [
                                "list",
                                [
                                  "object",
                                  {
                                    "count": "string",
                                    "name": "string"
                                  }
                                ]
                              ],
                              "version": "string"
                            }
                          ],
                          "path": "string",
                          "plugin": [
                            "object",
                            {
                              "env": [
                                "list",
                                [
                                  "object",
                                  {
                                    "name": "string",
                                    "value": "string"
                                  }
                                ]
                              ],
                              "name": "string",
                              "parameters": [
                                "list",
                                [
                                  "object",
                                  {
                                    "array": [
                                      "list",
                                      "string"
                                    ],
                                    "map": [
                                      "map",
                                      "string"
                                    ],
                                    "name": "string",
                                    "string": "string"
                                  }
                                ]
                              ]
                            }
                          ],
                          "ref": "string",
                          "repoURL": "string",
                          "targetRevision": "string"
                        }
                      ],
                      "sources": [
                        "tuple",
                        [
                          [
                            "object",
                            {
                              "chart": "string",
                              "directory": [
                                "object",
                                {
                                  "exclude": "string",
                                  "include": "string",
                                  "jsonnet": [
                                    "object",
                                    {
                                      "extVars": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "code": "bool",
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ],
                                      "libs": [
                                        "list",
                                        "string"
                                      ],
                                      "tlas": [
                                        "list",
                                        [
                                          "object",
                                          {
                                            "code": "bool",
                                            "name": "string",
                                            "value": "string"
                                          }
                                        ]
                                      ]
                                    }
                                  ],
                                  "recurse": "bool"
                                }
                              ],
                              "helm": [
                                "object",
                                {
                                  "fileParameters": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "path": "string"
                                      }
                                    ]
                                  ],
                                  "ignoreMissingValueFiles": "bool",
                                  "parameters": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "forceString": "bool",
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "passCredentials": "bool",
                                  "releaseName": "string",
                                  "skipCrds": "bool",
                                  "valueFiles": [
                                    "list",
                                    "string"
                                  ],
                                  "values": "string",
                                  "valuesObject": "dynamic",
                                  "version": "string"
                                }
                              ],
                              "kustomize": [
                                "object",
                                {
                                  "commonAnnotations": [
                                    "map",
                                    "string"
                                  ],
                                  "commonAnnotationsEnvsubst": "bool",
                                  "commonLabels": [
                                    "map",
                                    "string"
                                  ],
                                  "components": [
                                    "list",
                                    "string"
                                  ],
                                  "forceCommonAnnotations": "bool",
                                  "forceCommonLabels": "bool",
                                  "images": [
                                    "list",
                                    "string"
                                  ],
                                  "namePrefix": "string",
                                  "nameSuffix": "string",
                                  "namespace": "string",
                                  "patches": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "options": [
                                          "map",
                                          "bool"
                                        ],
                                        "patch": "string",
                                        "path": "string",
                                        "target": [
                                          "object",
                                          {
                                            "annotationSelector": "string",
                                            "group": "string",
                                            "kind": "string",
                                            "labelSelector": "string",
                                            "name": "string",
                                            "namespace": "string",
                                            "version": "string"
                                          }
                                        ]
                                      }
                                    ]
                                  ],
                                  "replicas": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "count": "string",
                                        "name": "string"
                                      }
                                    ]
                                  ],
                                  "version": "string"
                                }
                              ],
                              "path": "string",
                              "plugin": [
                                "object",
                                {
                                  "env": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "name": "string",
                                        "value": "string"
                                      }
                                    ]
                                  ],
                                  "name": "string",
                                  "parameters": [
                                    "list",
                                    [
                                      "object",
                                      {
                                        "array": [
                                          "list",
                                          "string"
                                        ],
                                        "map": [
                                          "map",
                                          "string"
                                        ],
                                        "name": "string",
                                        "string": "string"
                                      }
                                    ]
                                  ]
                                }
                              ],
                              "ref": "string",
                              "repoURL": "string",
                              "targetRevision": "string"
                            }
                          ]
                        ]
                      ],
                      "syncPolicy": [
                        "object",
                        {
                          "automated": [
                            "object",
                            {
                              "allowEmpty": "bool",
                              "prune": "bool",
                              "selfHeal": "bool"
                            }
                          ],
                          "managedNamespaceMetadata": [
                            "object",
                            {
                              "annotations": [
                                "map",
                                "string"
                              ],
                              "labels": [
                                "map",
                                "string"
                              ]
                            }
                          ],
                          "retry": [
                            "object",
                            {
                              "backoff": [
                                "object",
                                {
                                  "duration": "string",
                                  "factor": "number",
                                  "maxDuration": "string"
                                }
                              ],
                              "limit": "number"
                            }
                          ],
                          "syncOptions": [
                            "list",
                            "string"
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "timeouts": [],
            "wait": [],
            "wait_for": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.argo.bcrypt_hash.argo_pass",
            "module.argo.helm_release.argo-cd",
            "module.argo.kubernetes_config_map.argo_ssh",
            "module.argo.kubernetes_namespace.argo",
            "module.argo.kubernetes_secret_v1.argo_wf_sso_secret",
            "module.argo.module.irsa_argo.aws_iam_role.irsa",
            "module.argo.module.irsa_argo.data.aws_caller_identity.current",
            "module.argo.module.irsa_argo.data.aws_iam_policy_document.this",
            "module.argo.module.irsa_argo.data.aws_partition.current",
            "module.argo.module.irsa_argo.random_string.random",
            "module.argo.random_password.argo_wf_client_secret",
            "module.argo.random_password.password",
            "module.argo.random_string.argo_wf_client_id",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "argo",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "argo",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "argo",
                "resource_version": "12471",
                "uid": "c49d669b-f2cf-4e1c-a955-4e906aace365"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "kubernetes_secret_v1",
      "name": "argo_repo",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "sshPrivateKey": "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAYEAw+apSXPQF3AWAJZQtABEP5yOqma7lfdEhz5vc67CwrRufijc5RFG\nCertVFpWgwqJstsuf6TngoPrhF9TpDOE3Ow8CmYa1O6vOF1nKnBzCIu8S9dmm5+ZnIZumz\n7hyhxv1iDVJdoakOEzvh4poRxSwfxX2oYhV8NECCi3i+jzmYp9bEc8WfVRKP1mE3EZEXSj\n09yF0CPV1NDOnlevZQRsAPDQUDZW/EOmDinMJ59HrF3h6xmvrANVq1FvsUoAt6aw443+Ab\nrzZ6S+5nDaRPH0FnhYeFu7rvdwMB9G57KYxDFoViv5pTba0lZbDDA9Q9Jhtm1Q7NkAnYIn\nW/pivOTqcg0z8aX1ZaGH6XOFicFnCu2dSUqhXNgZDDx6TYzWvCKvioqql4ugM5uwd3dTZK\n8lUBVqo0myJM6Zd8jDqeLzprmZEbnJrSd8wDp2pTDJsmAIsIqUF0iUBEdPVjJ1qENbFaoc\nV2fB6diYFbubsj+ciQ+W1pZnDoyAYgya6ummhJozAAAFgLpslbq6bJW6AAAAB3NzaC1yc2\nEAAAGBAMPmqUlz0BdwFgCWULQARD+cjqpmu5X3RIc+b3OuwsK0bn4o3OURRgnq7VRaVoMK\nibLbLn+k54KD64RfU6QzhNzsPApmGtTurzhdZypwcwiLvEvXZpufmZyGbps+4cocb9Yg1S\nXaGpDhM74eKaEcUsH8V9qGIVfDRAgot4vo85mKfWxHPFn1USj9ZhNxGRF0o9PchdAj1dTQ\nzp5Xr2UEbADw0FA2VvxDpg4pzCefR6xd4esZr6wDVatRb7FKALemsOON/gG682ekvuZw2k\nTx9BZ4WHhbu673cDAfRueymMQxaFYr+aU22tJWWwwwPUPSYbZtUOzZAJ2CJ1v6Yrzk6nIN\nM/Gl9WWhh+lzhYnBZwrtnUlKoVzYGQw8ek2M1rwir4qKqpeLoDObsHd3U2SvJVAVaqNJsi\nTOmXfIw6ni86a5mRG5ya0nfMA6dqUwybJgCLCKlBdIlARHT1YydahDWxWqHFdnwenYmBW7\nm7I/nIkPltaWZw6MgGIMmurppoSaMwAAAAMBAAEAAAGAFPJTdJKpE/B8schgzbZflcuoJ4\nk/kovzbGCdKynrEkWXsO6um+GqcwIHKWdVa8KTMaglAyn/RSHU630D5QFLOhIaY2RChzUU\nUDsQfmWyrx293wAjrQ02MBnhtsDVBLbgsG0nTVpST958mV4BRoRQRwSz4h5Ib2lmG1c7NP\n8OGQNJYOwHBHlqGa9qnDaSHx8xK0SfnD9QrGY9SYoHq436/GjDZWhCCcwz87y9YxkxYTlS\noEBJW+OpY92by0Gl7P0qKeNwRCobmylvEmUiVYOTNtqaqSPT4h5+KjCLzw+sRQfK4+9OGB\nBgfgdvzcu/IdfUgvHyC5KaqKzlKSAj4g4TQ3BvOb4VE9Pk5/PotkDyDQlaBJdXCNJpi3Ev\n+1Xm42XbtCOdBYn7xD1HtLFigx9EaaXR9ioTpRo7Sy81P3v2WfR53EOHgIhL6EUUIh5Zic\nPIIQFzBOwp1JKvVyBn7u7O1WL03maFmB093fJoXHVtxvyKjHJDbz6Jc/dEUtCqe90JAAAA\nwQCX/ZqiNu/0G+RsCOfk9OXYLjkilPFYhoECR7ta/afc38IpqUK7WuALHpcXj2e5484k1o\nZT1grDRrpgVj/CWGuZk/GuGdWQou6wk75FoeMsZbSFVQFSKGnQAkan7T+3GiDphM2S/HuK\ntX/Bo/CA97Yf2iFfRHlA8dL4yQO6yDp/3AxPGqnHYjjP4uA48KmxBrYjKDev77/y+fIP8x\nTOi+mbClaQlpyD6bZ61eYE5jqyBTIGvGOzw+g84hujsiE5LuEAAADBANaPRH99/v6dY9cy\n8LNWrK5cwyC+10WsSvnaFPRxts07EQyUDtSxrQPVCMbec3QZ8lGfkl2hJ503V3tzVmpGBJ\nEgvFaDDd3ewXYSKeponTqqUqUMRoqAHP2T546+AsANFLi1p5L454Q6z/TgMlaxhLmUQPmd\nzkA5ov4gF6VWjJ4p1d0ZBmaA7pxqoQ7zWLSSJgVcp9fdrFpuOh1Ge4WXFqen4ghkQtaohX\nwad0PUxoU2w+9/R0gZWffqG940GJAtKwAAAMEA6bzVQFH4G8Lwwb/UwhtC7x6UF1pdt/0V\ncQ+xkmOFfnn86qONPerPSGXRk8n7b+8lxWo2ZyexIltLSElYRCfKg/EZzYomt1hdypJEw/\nujXSvkAZa4xtsx90mg60WfdWYsSpP1zk3iKMqx2//zdkxobDEPzGmJSUmjEzjnZNuu/J8v\nlo6Kr2oPWid15tAFfbEsyDzrHrI+RdvKGcAw4ozI9jVvzBFS9Q39HLvau3i6WExIaMS/h9\nWiRvbiahq4QhMZAAAAB3VzZXJAd3MBAgM=\n-----END OPENSSH PRIVATE KEY-----\n",
              "type": "git",
              "url": "git@github.com:zefir01/crossform.git"
            },
            "id": "argo/argocd-repo",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "argocd.argoproj.io/secret-type": "repository"
                },
                "name": "argocd-repo",
                "namespace": "argo",
                "resource_version": "843848",
                "uid": "2289ef93-6eb1-41dc-927e-368bfbeab717"
              }
            ],
            "timeouts": null,
            "type": "Opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "binary_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.argo.bcrypt_hash.argo_pass",
            "module.argo.helm_release.argo-cd",
            "module.argo.kubernetes_config_map.argo_ssh",
            "module.argo.kubernetes_namespace.argo",
            "module.argo.kubernetes_secret_v1.argo_wf_sso_secret",
            "module.argo.module.irsa_argo.aws_iam_role.irsa",
            "module.argo.module.irsa_argo.data.aws_caller_identity.current",
            "module.argo.module.irsa_argo.data.aws_iam_policy_document.this",
            "module.argo.module.irsa_argo.data.aws_partition.current",
            "module.argo.module.irsa_argo.random_string.random",
            "module.argo.random_password.argo_wf_client_secret",
            "module.argo.random_password.password",
            "module.argo.random_string.argo_wf_client_id",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "kubernetes_secret_v1",
      "name": "argo_wf_sso_secret",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": null,
            "data": {
              "client-id": "kK5MwUVH7rst5QTr",
              "client-secret": "dBOWfwSM25QYWJTfmNX0TBqinnNIDupb"
            },
            "id": "argo/argo-workflows-sso",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "argo-workflows-sso",
                "namespace": "argo",
                "resource_version": "841941",
                "uid": "c9f341e8-985a-4718-9ac3-b1856e3acdd8"
              }
            ],
            "timeouts": null,
            "type": "Opaque",
            "wait_for_service_account_token": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "binary_data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "data"
              },
              {
                "type": "index",
                "value": {
                  "value": "client-secret",
                  "type": "string"
                }
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.argo.random_password.argo_wf_client_secret",
            "module.argo.random_string.argo_wf_client_id",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "null_resource",
      "name": "patch_default_project",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "101340361857970064",
            "triggers": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.argo.bcrypt_hash.argo_pass",
            "module.argo.helm_release.argo-cd",
            "module.argo.kubernetes_config_map.argo_ssh",
            "module.argo.kubernetes_namespace.argo",
            "module.argo.kubernetes_secret_v1.argo_wf_sso_secret",
            "module.argo.module.eks-kubeconfig.data.aws_eks_cluster.this",
            "module.argo.module.eks-kubeconfig.data.aws_eks_cluster_auth.ephemeral",
            "module.argo.module.irsa_argo.aws_iam_role.irsa",
            "module.argo.module.irsa_argo.data.aws_caller_identity.current",
            "module.argo.module.irsa_argo.data.aws_iam_policy_document.this",
            "module.argo.module.irsa_argo.data.aws_partition.current",
            "module.argo.module.irsa_argo.random_string.random",
            "module.argo.random_password.argo_wf_client_secret",
            "module.argo.random_password.password",
            "module.argo.random_string.argo_wf_client_id",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "random_password",
      "name": "argo_wf_client_secret",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$SIdvYvgHHbuiIydYCICTLuageg6yXv4vDptb.ljDsiLtPylaid7ge",
            "id": "none",
            "keepers": null,
            "length": 32,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "dBOWfwSM25QYWJTfmNX0TBqinnNIDupb",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "bcrypt_hash"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "result"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "random_password",
      "name": "password",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 3,
          "attributes": {
            "bcrypt_hash": "$2a$10$FyWea3mr2uM00FPFdJP.bOuRQRmWf.0lKwCeoCOJhO6n9FCR/4IHW",
            "id": "none",
            "keepers": null,
            "length": 16,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "CS0HzEm1gOf5LYv3",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "result"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "bcrypt_hash"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.argo",
      "mode": "managed",
      "type": "random_string",
      "name": "argo_wf_client_id",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "kK5MwUVH7rst5QTr",
            "keepers": null,
            "length": 16,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "kK5MwUVH7rst5QTr",
            "special": false,
            "upper": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argo.module.eks-kubeconfig",
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP"
              }
            ],
            "arn": "arn:aws:eks:us-west-2:482235484697:cluster/crossform-tower",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJRStibE43NFAzY1V3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBME1qUXdNVFEzTURsYUZ3MHpOREEwTWpJd01UVXlNRGxhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUR1RllPeHhHQUFNZFFxR3R4SHpZVXlpeERkNlBmbUlCWlJZTlZUVmNEZzVkaHF4dnlBdXFxdWdQUWsKbDRFNkVkbUl0NGU3RnpiWnZOc1JjcHVSUGhDMTdoTnYxRU8xKzFJcEYwY2ZvV2hMVlJwN2dwaURZT2NncVk1SQpQWlBjSkFQcGhxcUVRc0gwMmlURTlmNFRFRG9UeHE4c1lhYndyVGxBWWlzZTJwV2VzTVNzNUdMTWVXb3FQODdxClQyTVFxSjJVMUorWThaNnBKcGdvdm02ZlJIVjU5QUY3WWsvcHBDYkRJRXpnWDZ1S0FzNHk4aE95M0RaR255VHAKd2lYeFQ5VE5GREFyT1c3d1ErZHBtWDZVMEtyMlg2VVdrTTVja2k0b2MwS3dRZWIxazBJa1NhZldqRGV5cElQRQpOcHo4WnB2Uk5YM1JONFZEMW9haDJ4UVZVa1NUQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUZ0FnWlFwaVF3TGlldVlYRHZSVnp0Q0d3aEZqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0paejkrWVJVdApmRldDbmdoQmRGMy8zOWtqUlJrMERiSnRZZTN1VTk1OXp4OFZ0V0thTVFlZXBhZWt2QVdnRnIwaU40OTZ1cmpwClJLMG1GL0ZlNEx3S3ZZcnBFamt0OGVxdlZwc1loWkp3aVR5L3docVF2VjJPRlU4R2hkVXNnVHMwNjljSXZNWnUKOHQvVWdadnVnbUs1MVhWNmFScm1MQndoVzF3bm1xSFNTQWxDNmFyUWRaTzJZb2dBS29WK0tXUHNhRXpmY0cvcwovT0VZNFdyUHdid3NORnVxc3h4QW9HN25udk41dkk3alJEdWwvUlp6Qk5pWHZNSWdKNG5ERndQZ1VCRnlUWFFzCmxENVkxUGlMYVhsbEVYY2hEdVo5STVLUEV0a1c4LzRsaHg5dVFFTFgzMXh3NFhJcXFiMFVIZTdZbHFZb2diZ20KUHhUb05aYTF2dktxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-04-24 01:47:56.45 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "endpoint": "https://8F7E3D9B6061092A04FBE4D89DF8F882.gr7.us-west-2.eks.amazonaws.com",
            "id": "crossform-tower",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "crossform-tower",
            "outpost_config": [],
            "platform_version": "eks.6",
            "role_arn": "arn:aws:iam::482235484697:role/crossform-tower-cluster-20240424013812345100000002",
            "status": "ACTIVE",
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "version": "1.29",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-04980cfdb77e3b494",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0b3c1e1e5b8b11088"
                ],
                "subnet_ids": [
                  "subnet-06b312a8fceb4daa4",
                  "subnet-0ba664334919c2d66"
                ],
                "vpc_id": "vpc-006f2f6336237da1e"
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argo.module.eks-kubeconfig",
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "ephemeral",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "crossform-tower",
            "name": "crossform-tower",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMudXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vP0FjdGlvbj1HZXRDYWxsZXJJZGVudGl0eSZWZXJzaW9uPTIwMTEtMDYtMTUmWC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBWEFSM1pSSU1YQUJKTFBBTCUyRjIwMjQwNDI2JTJGdXMtd2VzdC0yJTJGc3RzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA0MjZUMjA0NjM1WiZYLUFtei1FeHBpcmVzPTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT1mYjljMzJjYzg2MGVlMTZlNzhhMmMwZTlmZTIxODhhOTUzZDVjNTMxM2NkM2ZjZTc5YWY2ZTY5MDI3ZGU0M2I4"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "token"
              }
            ]
          ]
        }
      ]
    },
    {
      "module": "module.argo.module.irsa_argo",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "482235484697",
            "arn": "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com",
            "id": "482235484697",
            "user_id": "AIDAXAR3ZRIMVAPH4RMYC"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argo.module.irsa_argo",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1136529774",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"ExplicitSelfRoleAssumption1\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"sts:AssumeRoleWithWebIdentity\",\n        \"sts:AssumeRole\"\n      ],\n      \"Principal\": {\n        \"AWS\": \"*\"\n      },\n      \"Condition\": {\n        \"ArnLike\": {\n          \"aws:PrincipalArn\": \"arn:aws:iam::482235484697:role/irsa-crossform-tower-argo-ktvict22\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::482235484697:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882\"\n      },\n      \"Condition\": {\n        \"StringLike\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:aud\": \"sts.amazonaws.com\",\n          \"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:sub\": \"system:serviceaccount:argo:argocd-*\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole",
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "ArnLike",
                    "values": [
                      "arn:aws:iam::482235484697:role/irsa-crossform-tower-argo-ktvict22"
                    ],
                    "variable": "aws:PrincipalArn"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "*"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [],
                "sid": "ExplicitSelfRoleAssumption1"
              },
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringLike",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:aud"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      "system:serviceaccount:argo:argocd-*"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::482235484697:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argo.module.irsa_argo",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argo.module.irsa_argo",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US West (Oregon)",
            "endpoint": "ec2.us-west-2.amazonaws.com",
            "id": "us-west-2",
            "name": "us-west-2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.argo.module.irsa_argo",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::482235484697:role/irsa-crossform-tower-argo-ktvict22",
            "assume_role_policy": "{\"Statement\":[{\"Action\":[\"sts:AssumeRoleWithWebIdentity\",\"sts:AssumeRole\"],\"Condition\":{\"ArnLike\":{\"aws:PrincipalArn\":\"arn:aws:iam::482235484697:role/irsa-crossform-tower-argo-ktvict22\"}},\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Sid\":\"ExplicitSelfRoleAssumption1\"},{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringLike\":{\"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:aud\":\"sts.amazonaws.com\",\"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:sub\":\"system:serviceaccount:argo:argocd-*\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::482235484697:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-04-24T03:00:50Z",
            "description": "",
            "force_detach_policies": false,
            "id": "irsa-crossform-tower-argo-ktvict22",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::482235484697:policy/argocd-assume"
            ],
            "max_session_duration": 3600,
            "name": "irsa-crossform-tower-argo-ktvict22",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Name": "irsa-crossform-tower-argo-ktvict22"
            },
            "tags_all": {
              "Name": "irsa-crossform-tower-argo-ktvict22"
            },
            "unique_id": "AROAXAR3ZRIMWWWCZHX5Q"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.argo.module.irsa_argo.data.aws_caller_identity.current",
            "module.argo.module.irsa_argo.data.aws_iam_policy_document.this",
            "module.argo.module.irsa_argo.data.aws_partition.current",
            "module.argo.module.irsa_argo.random_string.random",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.argo.module.irsa_argo",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "0",
          "schema_version": 0,
          "attributes": {
            "id": "irsa-crossform-tower-argo-ktvict22-20240424030051016100000004",
            "policy_arn": "arn:aws:iam::482235484697:policy/argocd-assume",
            "role": "irsa-crossform-tower-argo-ktvict22"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.argo.aws_iam_policy.argo",
            "module.argo.data.aws_iam_policy_document.assume",
            "module.argo.module.irsa_argo.aws_iam_role.irsa",
            "module.argo.module.irsa_argo.data.aws_caller_identity.current",
            "module.argo.module.irsa_argo.data.aws_iam_policy_document.this",
            "module.argo.module.irsa_argo.data.aws_partition.current",
            "module.argo.module.irsa_argo.random_string.random",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.argo.module.irsa_argo",
      "mode": "managed",
      "type": "random_string",
      "name": "random",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "ktvict22",
            "keepers": null,
            "length": 8,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "ktvict22",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.domain",
      "mode": "managed",
      "type": "aws_route53_zone",
      "name": "zone",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:route53:::hostedzone/Z01616622REHXTELNLUOW",
            "comment": "Managed by Terraform",
            "delegation_set_id": "",
            "force_destroy": false,
            "id": "Z01616622REHXTELNLUOW",
            "name": "tower.crossform.io",
            "name_servers": [
              "ns-1087.awsdns-07.org",
              "ns-1825.awsdns-36.co.uk",
              "ns-478.awsdns-59.com",
              "ns-813.awsdns-37.net"
            ],
            "primary_name_server": "ns-813.awsdns-37.net",
            "tags": {},
            "tags_all": {},
            "vpc": [],
            "zone_id": "Z01616622REHXTELNLUOW"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.domain.module.this",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-west-2:482235484697:certificate/40ca643a-5be3-4a52-988c-c1f9d4ade8f4",
            "certificate_authority_arn": "",
            "certificate_body": null,
            "certificate_chain": null,
            "domain_name": "tower.crossform.io",
            "domain_validation_options": [
              {
                "domain_name": "*.tower.crossform.io",
                "resource_record_name": "_9a22f90d020a8c2e6a6b347e8bc47be3.tower.crossform.io.",
                "resource_record_type": "CNAME",
                "resource_record_value": "_171d88b1e37220919d3af17af6b6e0d0.mhbtsbpdnt.acm-validations.aws."
              },
              {
                "domain_name": "tower.crossform.io",
                "resource_record_name": "_9a22f90d020a8c2e6a6b347e8bc47be3.tower.crossform.io.",
                "resource_record_type": "CNAME",
                "resource_record_value": "_171d88b1e37220919d3af17af6b6e0d0.mhbtsbpdnt.acm-validations.aws."
              }
            ],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-west-2:482235484697:certificate/40ca643a-5be3-4a52-988c-c1f9d4ade8f4",
            "key_algorithm": "RSA_2048",
            "not_after": "2025-05-24T23:59:59Z",
            "not_before": "2024-04-25T00:00:00Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "ENABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": null,
            "renewal_eligibility": "ELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "*.tower.crossform.io",
              "tower.crossform.io"
            ],
            "tags": {
              "Environment": "default"
            },
            "tags_all": {
              "Environment": "default"
            },
            "type": "AMAZON_ISSUED",
            "validation_emails": [],
            "validation_method": "DNS",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "module.domain.aws_route53_zone.zone"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.domain.module.this",
      "mode": "managed",
      "type": "aws_acm_certificate_validation",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "certificate_arn": "arn:aws:acm:us-west-2:482235484697:certificate/40ca643a-5be3-4a52-988c-c1f9d4ade8f4",
            "id": "0001-01-01 00:00:00 +0000 UTC",
            "timeouts": null,
            "validation_record_fqdns": [
              "_9a22f90d020a8c2e6a6b347e8bc47be3.tower.crossform.io"
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo0NTAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.domain.aws_route53_zone.zone",
            "module.domain.module.this.aws_acm_certificate.this",
            "module.domain.module.this.aws_route53_record.validation"
          ]
        }
      ]
    },
    {
      "module": "module.domain.module.this",
      "mode": "managed",
      "type": "aws_route53_record",
      "name": "validation",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "alias": [],
            "allow_overwrite": true,
            "cidr_routing_policy": [],
            "failover_routing_policy": [],
            "fqdn": "_9a22f90d020a8c2e6a6b347e8bc47be3.tower.crossform.io",
            "geolocation_routing_policy": [],
            "geoproximity_routing_policy": [],
            "health_check_id": "",
            "id": "Z01616622REHXTELNLUOW__9a22f90d020a8c2e6a6b347e8bc47be3.tower.crossform.io._CNAME",
            "latency_routing_policy": [],
            "multivalue_answer_routing_policy": false,
            "name": "_9a22f90d020a8c2e6a6b347e8bc47be3.tower.crossform.io",
            "records": [
              "_171d88b1e37220919d3af17af6b6e0d0.mhbtsbpdnt.acm-validations.aws."
            ],
            "set_identifier": "",
            "ttl": 60,
            "type": "CNAME",
            "weighted_routing_policy": [],
            "zone_id": "Z01616622REHXTELNLUOW"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.domain.aws_route53_zone.zone",
            "module.domain.module.this.aws_acm_certificate.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "482235484697",
            "arn": "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com",
            "id": "482235484697",
            "user_id": "AIDAXAR3ZRIMVAPH4RMYC"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_eks_addon_version",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "coredns",
          "schema_version": 0,
          "attributes": {
            "addon_name": "coredns",
            "id": "coredns",
            "kubernetes_version": "1.29",
            "most_recent": false,
            "version": "v1.11.1-eksbuild.4"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "kube-proxy",
          "schema_version": 0,
          "attributes": {
            "addon_name": "kube-proxy",
            "id": "kube-proxy",
            "kubernetes_version": "1.29",
            "most_recent": false,
            "version": "v1.29.0-eksbuild.1"
          },
          "sensitive_attributes": []
        },
        {
          "index_key": "vpc-cni",
          "schema_version": 0,
          "attributes": {
            "addon_name": "vpc-cni",
            "id": "vpc-cni",
            "kubernetes_version": "1.29",
            "most_recent": false,
            "version": "v1.16.0-eksbuild.1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "2764486067",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"EKSClusterAssumeRole\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": "EKSClusterAssumeRole"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_iam_session_context",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com",
            "id": "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com",
            "issuer_arn": "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com",
            "issuer_id": "",
            "issuer_name": "",
            "session_name": ""
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "data",
      "type": "tls_certificate",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "certificates": [
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEdTCCA12gAwIBAgIJAKcOSkw0grd/MA0GCSqGSIb3DQEBCwUAMGgxCzAJBgNV\nBAYTAlVTMSUwIwYDVQQKExxTdGFyZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTIw\nMAYDVQQLEylTdGFyZmllbGQgQ2xhc3MgMiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\neTAeFw0wOTA5MDIwMDAwMDBaFw0zNDA2MjgxNzM5MTZaMIGYMQswCQYDVQQGEwJV\nUzEQMA4GA1UECBMHQXJpem9uYTETMBEGA1UEBxMKU2NvdHRzZGFsZTElMCMGA1UE\nChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjE7MDkGA1UEAxMyU3RhcmZp\nZWxkIFNlcnZpY2VzIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVDDrEKvlO4vW+GZdfjohTsR8/\ny8+fIBNtKTrID30892t2OGPZNmCom15cAICyL1l/9of5JUOG52kbUpqQ4XHj2C0N\nTm/2yEnZtvMaVq4rtnQU68/7JuMauh2WLmo7WJSJR1b/JaCTcFOD2oR0FMNnngRo\nOt+OQFodSk7PQ5E751bWAHDLUu57fa4657wx+UX2wmDPE1kCK4DMNEffud6QZW0C\nzyyRpqbn3oUYSXxmTqM6bam17jQuug0DuDPfR+uxa40l2ZvOgdFFRjKWcIfeAg5J\nQ4W2bHO7ZOphQazJ1FTfhy/HIrImzJ9ZVGif/L4qL8RVHHVAYBeFAlU5i38FAgMB\nAAGjgfAwge0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0O\nBBYEFJxfAN+qAdcwKziIorhtSpzyEZGDMB8GA1UdIwQYMBaAFL9ft9HO3R+G9FtV\nrNzXEMIOqYjnME8GCCsGAQUFBwEBBEMwQTAcBggrBgEFBQcwAYYQaHR0cDovL28u\nc3MyLnVzLzAhBggrBgEFBQcwAoYVaHR0cDovL3guc3MyLnVzL3guY2VyMCYGA1Ud\nHwQfMB0wG6AZoBeGFWh0dHA6Ly9zLnNzMi51cy9yLmNybDARBgNVHSAECjAIMAYG\nBFUdIAAwDQYJKoZIhvcNAQELBQADggEBACMd44pXyn3pF3lM8R5V/cxTbj5HD9/G\nVfKyBDbtgB9TxF00KGu+x1X8Z+rLP3+QsjPNG1gQggL4+C/1E2DUBc7xgQjB3ad1\nl08YuW3e95ORCLp+QCztweq7dp4zBncdDQh/U90bZKuCJ/Fp1U1ervShw3WnWEQt\n8jxwmKy6abaVd38PMV4s/KCHOkdp8Hlf9BRUpJVeEXgSYCfOn8J3/yNTd126/+pZ\n59vPr5KW7ySaNRB6nJHGDn2Z9j8Z3/VyVOEVqQdZe4O/Ui5GjLIAZHYcSNPYeehu\nVsyuLAOQ1xk4meTKCRlb/weWsKh/NEnfVqn3sF/tM+2MR7cwA130A4w=\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "OU=Starfield Class 2 Certification Authority,O=Starfield Technologies\\, Inc.,C=US",
                "not_after": "2034-06-28T17:39:16Z",
                "not_before": "2009-09-02T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "12037640545166866303",
                "sha1_fingerprint": "9e99a48a9960b14926bb7f3b02e22da2b0ab7280",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEkjCCA3qgAwIBAgITBn+USionzfP6wq4rAfkI7rnExjANBgkqhkiG9w0BAQsF\nADCBmDELMAkGA1UEBhMCVVMxEDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNj\nb3R0c2RhbGUxJTAjBgNVBAoTHFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4x\nOzA5BgNVBAMTMlN0YXJmaWVsZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1\ndGhvcml0eSAtIEcyMB4XDTE1MDUyNTEyMDAwMFoXDTM3MTIzMTAxMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaOCATEwggEtMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/\nBAQDAgGGMB0GA1UdDgQWBBSEGMyFNOy8DJSULghZnMeyEE4KCDAfBgNVHSMEGDAW\ngBScXwDfqgHXMCs4iKK4bUqc8hGRgzB4BggrBgEFBQcBAQRsMGowLgYIKwYBBQUH\nMAGGImh0dHA6Ly9vY3NwLnJvb3RnMi5hbWF6b250cnVzdC5jb20wOAYIKwYBBQUH\nMAKGLGh0dHA6Ly9jcnQucm9vdGcyLmFtYXpvbnRydXN0LmNvbS9yb290ZzIuY2Vy\nMD0GA1UdHwQ2MDQwMqAwoC6GLGh0dHA6Ly9jcmwucm9vdGcyLmFtYXpvbnRydXN0\nLmNvbS9yb290ZzIuY3JsMBEGA1UdIAQKMAgwBgYEVR0gADANBgkqhkiG9w0BAQsF\nAAOCAQEAYjdCXLwQtT6LLOkMm2xF4gcAevnFWAu5CIw+7bMlPLVvUOTNNWqnkzSW\nMiGpSESrnO09tKpzbeR/FoCJbM8oAxiDR3mjEH4wW6w7sGDgd9QIpuEdfF7Au/ma\neyKdpwAJfqxGF4PcnCZXmTA5YpaP7dreqsXMGz7KQ2hsVxa81Q4gLv7/wmpdLqBK\nbRRYh5TmOTFffHPLkIhqhBGWJ6bt2YFGpn6jcgAKUj6DiAdjd4lpFw85hdKrCEVN\n0FE6/V1dN2RMfjCyVSRCnTawXZwXgWHxyvkQAiSr6w10kY17RSlQOYiypok1JR4U\nakcjMS9cmvqtmg5iUaQqqcT5NJ0hGA==\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Starfield Services Root Certificate Authority - G2,O=Starfield Technologies\\, Inc.,L=Scottsdale,ST=Arizona,C=US",
                "not_after": "2037-12-31T01:00:00Z",
                "not_before": "2015-05-25T12:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "144918191876577076464031512351042010504348870",
                "sha1_fingerprint": "06b25927c42a721631c1efd9431e648fa62e1e39",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEXjCCA0agAwIBAgITB3MSSkvL1E7HtTvq8ZSELToPoTANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTIyMDgyMzIyMjUzMFoXDTMwMDgyMzIyMjUzMFowPDEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEcMBoGA1UEAxMTQW1hem9uIFJT\nQSAyMDQ4IE0wMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALtDGMZa\nqHneKei1by6+pUPPLljTB143Si6VpEWPc6mSkFhZb/6qrkZyoHlQLbDYnI2D7hD0\nsdzEqfnuAjIsuXQLG3A8TvX6V3oFNBFVe8NlLJHvBseKY88saLwufxkZVwk74g4n\nWlNMXzla9Y5F3wwRHwMVH443xGz6UtGSZSqQ94eFx5X7Tlqt8whi8qCaKdZ5rNak\n+r9nUThOeClqFd4oXych//Rc7Y0eX1KNWHYSI1Nk31mYgiK3JvH063g+K9tHA63Z\neTgKgndlh+WI+zv7i44HepRZjA1FYwYZ9Vv/9UkC5Yz8/yU65fgjaE+wVHM4e/Yy\nC2osrPWE7gJ+dXMCAwEAAaOCAVowggFWMBIGA1UdEwEB/wQIMAYBAf8CAQAwDgYD\nVR0PAQH/BAQDAgGGMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNV\nHQ4EFgQUwDFSzVpQw4J8dHHOy+mc+XrrguIwHwYDVR0jBBgwFoAUhBjMhTTsvAyU\nlC4IWZzHshBOCggwewYIKwYBBQUHAQEEbzBtMC8GCCsGAQUFBzABhiNodHRwOi8v\nb2NzcC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbTA6BggrBgEFBQcwAoYuaHR0cDov\nL2NydC5yb290Y2ExLmFtYXpvbnRydXN0LmNvbS9yb290Y2ExLmNlcjA/BgNVHR8E\nODA2MDSgMqAwhi5odHRwOi8vY3JsLnJvb3RjYTEuYW1hem9udHJ1c3QuY29tL3Jv\nb3RjYTEuY3JsMBMGA1UdIAQMMAowCAYGZ4EMAQIBMA0GCSqGSIb3DQEBCwUAA4IB\nAQAtTi6Fs0Azfi+iwm7jrz+CSxHH+uHl7Law3MQSXVtR8RV53PtR6r/6gNpqlzdo\nZq4FKbADi1v9Bun8RY8D51uedRfjsbeodizeBB8nXmeyD33Ep7VATj4ozcd31YFV\nfgRhvTSxNrrTlNpWkUk0m3BMPv8sg381HhA6uEYokE5q9uws/3YkKqRiEz3TsaWm\nJqIRZhMbgAfp7O7FUwFIb7UIspogZSKxPIWJpxiPo3TcBambbVtQOcNRWz5qCQdD\nslI2yayq0n2TXoHyNCLEH8rpsJRVILFsg0jc7BaFrMnF462+ajSehgj12IidNeRN\n4zl+EoNaWdpnWndvSpAEkq2P\n-----END CERTIFICATE-----\n",
                "is_ca": true,
                "issuer": "CN=Amazon Root CA 1,O=Amazon,C=US",
                "not_after": "2030-08-23T22:25:30Z",
                "not_before": "2022-08-23T22:25:30Z",
                "public_key_algorithm": "RSA",
                "serial_number": "166129353110899469622597955040406457904926625",
                "sha1_fingerprint": "414a2060b738c635cc7fc243e052615592830c53",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=Amazon RSA 2048 M02,O=Amazon,C=US",
                "version": 3
              },
              {
                "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIF5TCCBM2gAwIBAgIQDsWM2D5RSLl7IRD58Bp6DzANBgkqhkiG9w0BAQsFADA8\nMQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRwwGgYDVQQDExNBbWF6b24g\nUlNBIDIwNDggTTAyMB4XDTI0MDQwMTAwMDAwMFoXDTI1MDQzMDIzNTk1OVowKDEm\nMCQGA1UEAwwdKi5la3MudXMtd2VzdC0yLmFtYXpvbmF3cy5jb20wggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDX5xeQmZmCHJG/Hd1k93EKIB8aJgqMBjV8\nhK/mr1q0NT//Sv1xJGaZELpdUh1rAYUSSGUs0rRC8+vugtpzOMJ6asPo4KFOxfBe\neq+QZddyw7yay4RaywlHlBuvqhZkMcTyie3Bw08EnKct7xPKcn11cFHf5Uef1Q+G\nLyWJealim9xLyaSZ3VdKswDVn4YrqWaCi89RgngtldUTpTBBOr52C6ZOcaAPZj7L\nMkui4/kC4dTtnCKJKmVKT1gnbKK/bcH3G63M2EOSjhR1JFMyTNBs0UNfDqVFnpIB\ngc6antQWJ1z5BpiejH0HJlDBfa4JJ9LSbSSl4oSnW1m5FWgOP6TrAgMBAAGjggL1\nMIIC8TAfBgNVHSMEGDAWgBTAMVLNWlDDgnx0cc7L6Zz5euuC4jAdBgNVHQ4EFgQU\niV25OQVdcpXV1bT71pUVtEYNuiAwKAYDVR0RBCEwH4IdKi5la3MudXMtd2VzdC0y\nLmFtYXpvbmF3cy5jb20wEwYDVR0gBAwwCjAIBgZngQwBAgEwDgYDVR0PAQH/BAQD\nAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjA7BgNVHR8ENDAyMDCg\nLqAshipodHRwOi8vY3JsLnIybTAyLmFtYXpvbnRydXN0LmNvbS9yMm0wMi5jcmww\ndQYIKwYBBQUHAQEEaTBnMC0GCCsGAQUFBzABhiFodHRwOi8vb2NzcC5yMm0wMi5h\nbWF6b250cnVzdC5jb20wNgYIKwYBBQUHMAKGKmh0dHA6Ly9jcnQucjJtMDIuYW1h\nem9udHJ1c3QuY29tL3IybTAyLmNlcjAMBgNVHRMBAf8EAjAAMIIBfQYKKwYBBAHW\neQIEAgSCAW0EggFpAWcAdgDPEVbu1S58r/OHW9lpLpvpGnFnSrAX7KwB0lt3zsw7\nCAAAAY6aMr/xAAAEAwBHMEUCIEkz4BRPTftldFZ3x7B3K5F91iqxjGZKYVBh7ChF\nWMa1AiEA5Tac6flLFvDsSI9OprjWela3qTk8/meb1i4aTt4vLYUAdgB9WR4S4Xgq\nexxhZ3xe/fjQh1wUoE6VnrkDL9kOjC55uAAAAY6aMr+zAAAEAwBHMEUCIHFcffDz\nLXWVRQA1pu63XR9odC62oKPm00qYSEcIK9QhAiEAze+8hnlqBtqAkdLRW9KmBL2Q\n2el9UwkvdmiqSsAySBUAdQDm0jFjQHeMwRBBBtdxuc7B0kD2loSG+7qHMh39HjeO\nUAAAAY6aMr/EAAAEAwBGMEQCIG2ekWjuvM0A2NoQe7pGojHoYAyYK8+bISkAyTdC\n6HPBAiBR67wkUrGGjfMaD8cy2nBhuThBMB8kOZLm5YOegGDGyzANBgkqhkiG9w0B\nAQsFAAOCAQEAeNiU5fLVKMSwpzjtYMfCydbBJhmcbzBC81zZLFMETCoDT2gnJrEm\n86kN44ZMOonuECEs3n++I2lMoslsdXRevU7EZ4Jo8imOVy0Is05ffbfnv294viuG\nB23hMe9JQMVBuQzDyoUvBUhcJIxk7hQoFGjckh2P7km4HmH/0vZV13Lhrat9kws4\n3PzywHbzV5SsyOCszZFAowzsUaakhlBXOj++OeCTViHTLixywNhrA2n+21yCTVAj\nXAfc6i0YQ/B17FKkYlH/L5ZNl0UdXaW79LobdZdIsCfqOweGjUxLB/pWz2rK4JPI\nqBir/DrLGniJB5oLDg9DfN3gmRp6oWwWTw==\n-----END CERTIFICATE-----\n",
                "is_ca": false,
                "issuer": "CN=Amazon RSA 2048 M02,O=Amazon,C=US",
                "not_after": "2025-04-30T23:59:59Z",
                "not_before": "2024-04-01T00:00:00Z",
                "public_key_algorithm": "RSA",
                "serial_number": "19634931092034134610649070322822314511",
                "sha1_fingerprint": "3934cf57a95810cf5b7a7ce04dbb323fdb9a41a7",
                "signature_algorithm": "SHA256-RSA",
                "subject": "CN=*.eks.us-west-2.amazonaws.com",
                "version": 3
              }
            ],
            "content": null,
            "id": "9ce40dc2a049cbf871181c1b9ce87cb4fcc34109",
            "url": "https://oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882",
            "verify_chain": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-west-2:482235484697:log-group:/aws/eks/crossform-tower/cluster",
            "id": "/aws/eks/crossform-tower/cluster",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/eks/crossform-tower/cluster",
            "name_prefix": "",
            "retention_in_days": 90,
            "skip_destroy": false,
            "tags": {
              "Name": "/aws/eks/crossform-tower/cluster"
            },
            "tags_all": {
              "Name": "/aws/eks/crossform-tower/cluster"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_access_entry",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster_creator",
          "schema_version": 0,
          "attributes": {
            "access_entry_arn": "arn:aws:eks:us-west-2:482235484697:access-entry/crossform-tower/user/482235484697/peter.stukalov@dr.paygears.com/8ac786ee-858b-2cc3-f10e-8e919f9515df",
            "cluster_name": "crossform-tower",
            "created_at": "2024-04-24T02:09:01Z",
            "id": "crossform-tower:arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com",
            "kubernetes_groups": [],
            "modified_at": "2024-04-24T02:09:01Z",
            "principal_arn": "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com",
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "type": "STANDARD",
            "user_name": "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_access_policy_association",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster_creator_admin",
          "schema_version": 0,
          "attributes": {
            "access_scope": [
              {
                "namespaces": [],
                "type": "cluster"
              }
            ],
            "associated_at": "2024-04-24 02:09:02.246 +0000 UTC",
            "cluster_name": "crossform-tower",
            "id": "crossform-tower#arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com#arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
            "modified_at": "2024-04-24 02:09:02.246 +0000 UTC",
            "policy_arn": "arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy",
            "principal_arn": "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_addon",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "coredns",
          "schema_version": 0,
          "attributes": {
            "addon_name": "coredns",
            "addon_version": "v1.11.1-eksbuild.4",
            "arn": "arn:aws:eks:us-west-2:482235484697:addon/crossform-tower/coredns/1ac786ea-66b4-6f9e-edae-f92685ded052",
            "cluster_name": "crossform-tower",
            "configuration_values": "{\"computeType\":\"Fargate\"}",
            "created_at": "2024-04-24T02:00:01Z",
            "id": "crossform-tower:coredns",
            "modified_at": "2024-04-24T02:01:09Z",
            "preserve": true,
            "resolve_conflicts": null,
            "resolve_conflicts_on_create": "OVERWRITE",
            "resolve_conflicts_on_update": "OVERWRITE",
            "service_account_role_arn": "",
            "tags": {},
            "tags_all": {},
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            }
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "kube-proxy",
          "schema_version": 0,
          "attributes": {
            "addon_name": "kube-proxy",
            "addon_version": "v1.29.0-eksbuild.1",
            "arn": "arn:aws:eks:us-west-2:482235484697:addon/crossform-tower/kube-proxy/a4c786ea-66b6-c07e-6732-4422a16c7cc2",
            "cluster_name": "crossform-tower",
            "configuration_values": "",
            "created_at": "2024-04-24T02:00:01Z",
            "id": "crossform-tower:kube-proxy",
            "modified_at": "2024-04-24T02:00:03Z",
            "preserve": true,
            "resolve_conflicts": null,
            "resolve_conflicts_on_create": "OVERWRITE",
            "resolve_conflicts_on_update": "OVERWRITE",
            "service_account_role_arn": "",
            "tags": {},
            "tags_all": {},
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            }
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": "vpc-cni",
          "schema_version": 0,
          "attributes": {
            "addon_name": "vpc-cni",
            "addon_version": "v1.16.0-eksbuild.1",
            "arn": "arn:aws:eks:us-west-2:482235484697:addon/crossform-tower/vpc-cni/3cc786ea-66b8-6787-b4be-f7065885acb7",
            "cluster_name": "crossform-tower",
            "configuration_values": "",
            "created_at": "2024-04-24T02:00:01Z",
            "id": "crossform-tower:vpc-cni",
            "modified_at": "2024-04-24T02:00:04Z",
            "preserve": true,
            "resolve_conflicts": null,
            "resolve_conflicts_on_create": "OVERWRITE",
            "resolve_conflicts_on_update": "OVERWRITE",
            "service_account_role_arn": "",
            "tags": {},
            "tags_all": {},
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            }
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_eks_addon_version.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.eks_managed_node_group.aws_eks_node_group.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role.this",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.eks_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.eks_managed_node_group.aws_launch_template.this",
            "module.eks.module.eks_managed_node_group.aws_placement_group.this",
            "module.eks.module.eks_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.eks_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.eks_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.eks_managed_node_group.data.aws_partition.current",
            "module.eks.module.eks_managed_node_group.data.aws_ssm_parameter.ami",
            "module.eks.module.eks_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.module.fargate_profile.aws_eks_fargate_profile.this",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.additional",
            "module.eks.module.fargate_profile.aws_iam_role_policy_attachment.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.aws_autoscaling_group.this",
            "module.eks.module.self_managed_node_group.aws_autoscaling_schedule.this",
            "module.eks.module.self_managed_node_group.aws_eks_access_entry.this",
            "module.eks.module.self_managed_node_group.aws_iam_instance_profile.this",
            "module.eks.module.self_managed_node_group.aws_iam_role.this",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.additional",
            "module.eks.module.self_managed_node_group.aws_iam_role_policy_attachment.this",
            "module.eks.module.self_managed_node_group.aws_launch_template.this",
            "module.eks.module.self_managed_node_group.aws_placement_group.this",
            "module.eks.module.self_managed_node_group.data.aws_ami.eks_default",
            "module.eks.module.self_managed_node_group.data.aws_caller_identity.current",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type.this",
            "module.eks.module.self_managed_node_group.data.aws_ec2_instance_type_offerings.this",
            "module.eks.module.self_managed_node_group.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.self_managed_node_group.data.aws_partition.current",
            "module.eks.module.self_managed_node_group.data.aws_subnets.efa",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.al2023_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.data.cloudinit_config.linux_eks_managed_node_group",
            "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": false
              }
            ],
            "arn": "arn:aws:eks:us-west-2:482235484697:cluster/crossform-tower",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJRStibE43NFAzY1V3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBME1qUXdNVFEzTURsYUZ3MHpOREEwTWpJd01UVXlNRGxhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUR1RllPeHhHQUFNZFFxR3R4SHpZVXlpeERkNlBmbUlCWlJZTlZUVmNEZzVkaHF4dnlBdXFxdWdQUWsKbDRFNkVkbUl0NGU3RnpiWnZOc1JjcHVSUGhDMTdoTnYxRU8xKzFJcEYwY2ZvV2hMVlJwN2dwaURZT2NncVk1SQpQWlBjSkFQcGhxcUVRc0gwMmlURTlmNFRFRG9UeHE4c1lhYndyVGxBWWlzZTJwV2VzTVNzNUdMTWVXb3FQODdxClQyTVFxSjJVMUorWThaNnBKcGdvdm02ZlJIVjU5QUY3WWsvcHBDYkRJRXpnWDZ1S0FzNHk4aE95M0RaR255VHAKd2lYeFQ5VE5GREFyT1c3d1ErZHBtWDZVMEtyMlg2VVdrTTVja2k0b2MwS3dRZWIxazBJa1NhZldqRGV5cElQRQpOcHo4WnB2Uk5YM1JONFZEMW9haDJ4UVZVa1NUQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUZ0FnWlFwaVF3TGlldVlYRHZSVnp0Q0d3aEZqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0paejkrWVJVdApmRldDbmdoQmRGMy8zOWtqUlJrMERiSnRZZTN1VTk1OXp4OFZ0V0thTVFlZXBhZWt2QVdnRnIwaU40OTZ1cmpwClJLMG1GL0ZlNEx3S3ZZcnBFamt0OGVxdlZwc1loWkp3aVR5L3docVF2VjJPRlU4R2hkVXNnVHMwNjljSXZNWnUKOHQvVWdadnVnbUs1MVhWNmFScm1MQndoVzF3bm1xSFNTQWxDNmFyUWRaTzJZb2dBS29WK0tXUHNhRXpmY0cvcwovT0VZNFdyUHdid3NORnVxc3h4QW9HN25udk41dkk3alJEdWwvUlp6Qk5pWHZNSWdKNG5ERndQZ1VCRnlUWFFzCmxENVkxUGlMYVhsbEVYY2hEdVo5STVLUEV0a1c4LzRsaHg5dVFFTFgzMXh3NFhJcXFiMFVIZTdZbHFZb2diZ20KUHhUb05aYTF2dktxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-04-24 01:47:56.45 +0000 UTC",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator"
            ],
            "encryption_config": [
              {
                "provider": [
                  {
                    "key_arn": "arn:aws:kms:us-west-2:482235484697:key/b7b93509-2433-4879-a33a-4c6c08ca9c55"
                  }
                ],
                "resources": [
                  "secrets"
                ]
              }
            ],
            "endpoint": "https://8F7E3D9B6061092A04FBE4D89DF8F882.gr7.us-west-2.eks.amazonaws.com",
            "id": "crossform-tower",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "crossform-tower",
            "outpost_config": [],
            "platform_version": "eks.6",
            "role_arn": "arn:aws:iam::482235484697:role/crossform-tower-cluster-20240424013812345100000002",
            "status": "ACTIVE",
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "terraform-aws-modules": "eks"
            },
            "timeouts": {
              "create": null,
              "delete": null,
              "update": null
            },
            "version": "1.29",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-04980cfdb77e3b494",
                "endpoint_private_access": true,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-0b3c1e1e5b8b11088"
                ],
                "subnet_ids": [
                  "subnet-06b312a8fceb4daa4",
                  "subnet-0ba664334919c2d66"
                ],
                "vpc_id": "vpc-006f2f6336237da1e"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::482235484697:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::482235484697:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882",
            "tags": {
              "Name": "crossform-tower-eks-irsa"
            },
            "tags_all": {
              "Name": "crossform-tower-eks-irsa"
            },
            "thumbprint_list": [
              "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
            ],
            "url": "oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::482235484697:policy/crossform-tower-cluster-ClusterEncryption20240424013835268100000009",
            "attachment_count": 1,
            "description": "Cluster encryption policy to allow cluster role to utilize CMK provided",
            "id": "arn:aws:iam::482235484697:policy/crossform-tower-cluster-ClusterEncryption20240424013835268100000009",
            "name": "crossform-tower-cluster-ClusterEncryption20240424013835268100000009",
            "name_prefix": "crossform-tower-cluster-ClusterEncryption",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"kms:Encrypt\",\"kms:Decrypt\",\"kms:ListGrants\",\"kms:DescribeKey\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:kms:us-west-2:482235484697:key/b7b93509-2433-4879-a33a-4c6c08ca9c55\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAXAR3ZRIM4RQSMVSG5",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::482235484697:role/crossform-tower-cluster-20240424013812345100000002",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Sid\":\"EKSClusterAssumeRole\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-04-24T01:38:12Z",
            "description": "",
            "force_detach_policies": true,
            "id": "crossform-tower-cluster-20240424013812345100000002",
            "inline_policy": [
              {
                "name": "crossform-tower-cluster",
                "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\"],\"Effect\":\"Deny\",\"Resource\":\"*\"}]}"
              }
            ],
            "managed_policy_arns": [
              "arn:aws:iam::482235484697:policy/crossform-tower-cluster-ClusterEncryption20240424013835268100000009",
              "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
              "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
            ],
            "max_session_duration": 3600,
            "name": "crossform-tower-cluster-20240424013812345100000002",
            "name_prefix": "crossform-tower-cluster-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAXAR3ZRIM2TYPCZSVQ"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.data.aws_iam_policy_document.assume_role_policy"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "cluster_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "crossform-tower-cluster-20240424013812345100000002-2024042401383605510000000a",
            "policy_arn": "arn:aws:iam::482235484697:policy/crossform-tower-cluster-ClusterEncryption20240424013835268100000009",
            "role": "crossform-tower-cluster-20240424013812345100000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_policy.cluster_encryption",
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEKSClusterPolicy",
          "schema_version": 0,
          "attributes": {
            "id": "crossform-tower-cluster-20240424013812345100000002-20240424013813757100000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "crossform-tower-cluster-20240424013812345100000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "AmazonEKSVPCResourceController",
          "schema_version": 0,
          "attributes": {
            "id": "crossform-tower-cluster-20240424013812345100000002-20240424013813767900000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "crossform-tower-cluster-20240424013812345100000002"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:482235484697:security-group/sg-0b3c1e1e5b8b11088",
            "description": "EKS cluster security group",
            "egress": [],
            "id": "sg-0b3c1e1e5b8b11088",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Node groups to cluster API",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0606f5e444bb54061"
                ],
                "self": false,
                "to_port": 443
              }
            ],
            "name": "crossform-tower-cluster-2024042401400504810000000b",
            "name_prefix": "crossform-tower-cluster-",
            "owner_id": "482235484697",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "crossform-tower-cluster"
            },
            "tags_all": {
              "Name": "crossform-tower-cluster"
            },
            "timeouts": null,
            "vpc_id": "vpc-006f2f6336237da1e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:482235484697:security-group/sg-0606f5e444bb54061",
            "description": "EKS node shared security group",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow all egress",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0606f5e444bb54061",
            "ingress": [
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 4443/tcp webhook",
                "from_port": 4443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0b3c1e1e5b8b11088"
                ],
                "self": false,
                "to_port": 4443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 6443/tcp webhook",
                "from_port": 6443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0b3c1e1e5b8b11088"
                ],
                "self": false,
                "to_port": 6443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 8443/tcp webhook",
                "from_port": 8443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0b3c1e1e5b8b11088"
                ],
                "self": false,
                "to_port": 8443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node 9443/tcp webhook",
                "from_port": 9443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0b3c1e1e5b8b11088"
                ],
                "self": false,
                "to_port": 9443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node groups",
                "from_port": 443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0b3c1e1e5b8b11088"
                ],
                "self": false,
                "to_port": 443
              },
              {
                "cidr_blocks": [],
                "description": "Cluster API to node kubelets",
                "from_port": 10250,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [
                  "sg-0b3c1e1e5b8b11088"
                ],
                "self": false,
                "to_port": 10250
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS UDP",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node CoreDNS",
                "from_port": 53,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 53
              },
              {
                "cidr_blocks": [],
                "description": "Node to node ingress on ephemeral ports",
                "from_port": 1025,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": true,
                "to_port": 65535
              }
            ],
            "name": "crossform-tower-node-20240424013812344400000001",
            "name_prefix": "crossform-tower-node-",
            "owner_id": "482235484697",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "crossform-tower-node",
              "kubernetes.io/cluster/crossform-tower": "owned"
            },
            "tags_all": {
              "Name": "crossform-tower-node",
              "kubernetes.io/cluster/crossform-tower": "owned"
            },
            "timeouts": null,
            "vpc_id": "vpc-006f2f6336237da1e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "ingress_nodes_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node groups to cluster API",
            "from_port": 443,
            "id": "sgrule-1838791982",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": null,
            "protocol": "tcp",
            "security_group_id": "sg-0b3c1e1e5b8b11088",
            "security_group_rule_id": "sgr-0a2d54dedb7148aaa",
            "self": false,
            "source_security_group_id": "sg-0606f5e444bb54061",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "aws_security_group_rule",
      "name": "node",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "egress_all",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": [
              "0.0.0.0/0"
            ],
            "description": "Allow all egress",
            "from_port": 0,
            "id": "sgrule-2092264201",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "-1",
            "security_group_id": "sg-0606f5e444bb54061",
            "security_group_rule_id": "sgr-006f4c8de3c795114",
            "self": false,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 0,
            "type": "egress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_443",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node groups",
            "from_port": 443,
            "id": "sgrule-1372223428",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0606f5e444bb54061",
            "security_group_rule_id": "sgr-02af22bc6befa0745",
            "self": false,
            "source_security_group_id": "sg-0b3c1e1e5b8b11088",
            "timeouts": null,
            "to_port": 443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_4443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 4443/tcp webhook",
            "from_port": 4443,
            "id": "sgrule-2994416618",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0606f5e444bb54061",
            "security_group_rule_id": "sgr-0432ea3dd38dc5f57",
            "self": false,
            "source_security_group_id": "sg-0b3c1e1e5b8b11088",
            "timeouts": null,
            "to_port": 4443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_6443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 6443/tcp webhook",
            "from_port": 6443,
            "id": "sgrule-2067352700",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0606f5e444bb54061",
            "security_group_rule_id": "sgr-084ffbb57a975f77f",
            "self": false,
            "source_security_group_id": "sg-0b3c1e1e5b8b11088",
            "timeouts": null,
            "to_port": 6443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_8443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 8443/tcp webhook",
            "from_port": 8443,
            "id": "sgrule-1751478365",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0606f5e444bb54061",
            "security_group_rule_id": "sgr-0059644519624d060",
            "self": false,
            "source_security_group_id": "sg-0b3c1e1e5b8b11088",
            "timeouts": null,
            "to_port": 8443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_9443_webhook",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node 9443/tcp webhook",
            "from_port": 9443,
            "id": "sgrule-214188950",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0606f5e444bb54061",
            "security_group_rule_id": "sgr-0819740b3e3a041eb",
            "self": false,
            "source_security_group_id": "sg-0b3c1e1e5b8b11088",
            "timeouts": null,
            "to_port": 9443,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_cluster_kubelet",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Cluster API to node kubelets",
            "from_port": 10250,
            "id": "sgrule-1623657254",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0606f5e444bb54061",
            "security_group_rule_id": "sgr-020e09d194f5ed2ec",
            "self": false,
            "source_security_group_id": "sg-0b3c1e1e5b8b11088",
            "timeouts": null,
            "to_port": 10250,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_nodes_ephemeral",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node ingress on ephemeral ports",
            "from_port": 1025,
            "id": "sgrule-1677470653",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0606f5e444bb54061",
            "security_group_rule_id": "sgr-009f7106f5792f4ac",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 65535,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_tcp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS",
            "from_port": 53,
            "id": "sgrule-1765431723",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "tcp",
            "security_group_id": "sg-0606f5e444bb54061",
            "security_group_rule_id": "sgr-03b4e7dc8b58e9908",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": "ingress_self_coredns_udp",
          "schema_version": 2,
          "attributes": {
            "cidr_blocks": null,
            "description": "Node to node CoreDNS UDP",
            "from_port": 53,
            "id": "sgrule-3446012484",
            "ipv6_cidr_blocks": null,
            "prefix_list_ids": [],
            "protocol": "udp",
            "security_group_id": "sg-0606f5e444bb54061",
            "security_group_rule_id": "sgr-0c187b83417318a3b",
            "self": true,
            "source_security_group_id": null,
            "timeouts": null,
            "to_port": 53,
            "type": "ingress"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjIifQ==",
          "dependencies": [
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.vpc.aws_vpc.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks",
      "mode": "managed",
      "type": "time_sleep",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/time\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "create_duration": "30s",
            "destroy_duration": null,
            "id": "2024-04-24T01:56:41Z",
            "triggers": {
              "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJRStibE43NFAzY1V3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRBME1qUXdNVFEzTURsYUZ3MHpOREEwTWpJd01UVXlNRGxhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUR1RllPeHhHQUFNZFFxR3R4SHpZVXlpeERkNlBmbUlCWlJZTlZUVmNEZzVkaHF4dnlBdXFxdWdQUWsKbDRFNkVkbUl0NGU3RnpiWnZOc1JjcHVSUGhDMTdoTnYxRU8xKzFJcEYwY2ZvV2hMVlJwN2dwaURZT2NncVk1SQpQWlBjSkFQcGhxcUVRc0gwMmlURTlmNFRFRG9UeHE4c1lhYndyVGxBWWlzZTJwV2VzTVNzNUdMTWVXb3FQODdxClQyTVFxSjJVMUorWThaNnBKcGdvdm02ZlJIVjU5QUY3WWsvcHBDYkRJRXpnWDZ1S0FzNHk4aE95M0RaR255VHAKd2lYeFQ5VE5GREFyT1c3d1ErZHBtWDZVMEtyMlg2VVdrTTVja2k0b2MwS3dRZWIxazBJa1NhZldqRGV5cElQRQpOcHo4WnB2Uk5YM1JONFZEMW9haDJ4UVZVa1NUQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUZ0FnWlFwaVF3TGlldVlYRHZSVnp0Q0d3aEZqQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ0paejkrWVJVdApmRldDbmdoQmRGMy8zOWtqUlJrMERiSnRZZTN1VTk1OXp4OFZ0V0thTVFlZXBhZWt2QVdnRnIwaU40OTZ1cmpwClJLMG1GL0ZlNEx3S3ZZcnBFamt0OGVxdlZwc1loWkp3aVR5L3docVF2VjJPRlU4R2hkVXNnVHMwNjljSXZNWnUKOHQvVWdadnVnbUs1MVhWNmFScm1MQndoVzF3bm1xSFNTQWxDNmFyUWRaTzJZb2dBS29WK0tXUHNhRXpmY0cvcwovT0VZNFdyUHdid3NORnVxc3h4QW9HN25udk41dkk3alJEdWwvUlp6Qk5pWHZNSWdKNG5ERndQZ1VCRnlUWFFzCmxENVkxUGlMYVhsbEVYY2hEdVo5STVLUEV0a1c4LzRsaHg5dVFFTFgzMXh3NFhJcXFiMFVIZTdZbHFZb2diZ20KUHhUb05aYTF2dktxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
              "cluster_endpoint": "https://8F7E3D9B6061092A04FBE4D89DF8F882.gr7.us-west-2.eks.amazonaws.com",
              "cluster_name": "crossform-tower",
              "cluster_service_cidr": "172.20.0.0/16",
              "cluster_version": "1.29"
            }
          },
          "sensitive_attributes": [],
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks.module.fargate_profile[\"default\"]",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "482235484697",
            "arn": "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com",
            "id": "482235484697",
            "user_id": "AIDAXAR3ZRIMVAPH4RMYC"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.fargate_profile[\"default\"]",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "assume_role_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3016102342",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"eks-fargate-pods.amazonaws.com\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRole"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "eks-fargate-pods.amazonaws.com"
                    ],
                    "type": "Service"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.fargate_profile[\"default\"]",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.fargate_profile[\"default\"]",
      "mode": "managed",
      "type": "aws_eks_fargate_profile",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:eks:us-west-2:482235484697:fargateprofile/crossform-tower/default/40c786e8-e190-2f19-2c84-8054a25906cf",
            "cluster_name": "crossform-tower",
            "fargate_profile_name": "default",
            "id": "crossform-tower:default",
            "pod_execution_role_arn": "arn:aws:iam::482235484697:role/default-20240424013813283800000003",
            "selector": [
              {
                "labels": {},
                "namespace": "*"
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-06b312a8fceb4daa4",
              "subnet-0ba664334919c2d66"
            ],
            "tags": {},
            "tags_all": {},
            "timeouts": {
              "create": null,
              "delete": null
            }
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.eks.time_sleep.this",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.fargate_profile[\"default\"]",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::482235484697:role/default-20240424013813283800000003",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks-fargate-pods.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-04-24T01:38:13Z",
            "description": "Fargate profile IAM role",
            "force_detach_policies": true,
            "id": "default-20240424013813283800000003",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
            ],
            "max_session_duration": 3600,
            "name": "default-20240424013813283800000003",
            "name_prefix": "default-",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAXAR3ZRIMUAN6RTHPQ"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.fargate_profile[\"default\"]",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "AmazonEKSFargatePodExecutionRolePolicy",
          "schema_version": 0,
          "attributes": {
            "id": "default-20240424013813283800000003-20240424013814049700000006",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy",
            "role": "default-20240424013813283800000003"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_partition.current"
          ]
        },
        {
          "index_key": "AmazonEKS_CNI_Policy",
          "schema_version": 0,
          "attributes": {
            "id": "default-20240424013813283800000003-20240424013814081700000008",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "default-20240424013813283800000003"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.module.fargate_profile.aws_iam_role.this",
            "module.eks.module.fargate_profile.data.aws_caller_identity.current",
            "module.eks.module.fargate_profile.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.module.fargate_profile.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "account_id": "482235484697",
            "arn": "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com",
            "id": "482235484697",
            "user_id": "AIDAXAR3ZRIMVAPH4RMYC"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1484214989",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Sid\": \"Default\",\n      \"Effect\": \"Allow\",\n      \"Action\": \"kms:*\",\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::482235484697:root\"\n      }\n    },\n    {\n      \"Sid\": \"KeyAdministration\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:Update*\",\n        \"kms:UntagResource\",\n        \"kms:TagResource\",\n        \"kms:ScheduleKeyDeletion\",\n        \"kms:Revoke*\",\n        \"kms:ReplicateKey\",\n        \"kms:Put*\",\n        \"kms:List*\",\n        \"kms:ImportKeyMaterial\",\n        \"kms:Get*\",\n        \"kms:Enable*\",\n        \"kms:Disable*\",\n        \"kms:Describe*\",\n        \"kms:Delete*\",\n        \"kms:Create*\",\n        \"kms:CancelKeyDeletion\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com\"\n      }\n    },\n    {\n      \"Sid\": \"KeyUsage\",\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"kms:ReEncrypt*\",\n        \"kms:GenerateDataKey*\",\n        \"kms:Encrypt\",\n        \"kms:DescribeKey\",\n        \"kms:Decrypt\"\n      ],\n      \"Resource\": \"*\",\n      \"Principal\": {\n        \"AWS\": \"arn:aws:iam::482235484697:role/crossform-tower-cluster-20240424013812345100000002\"\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "kms:*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::482235484697:root"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "Default"
              },
              {
                "actions": [
                  "kms:CancelKeyDeletion",
                  "kms:Create*",
                  "kms:Delete*",
                  "kms:Describe*",
                  "kms:Disable*",
                  "kms:Enable*",
                  "kms:Get*",
                  "kms:ImportKeyMaterial",
                  "kms:List*",
                  "kms:Put*",
                  "kms:ReplicateKey",
                  "kms:Revoke*",
                  "kms:ScheduleKeyDeletion",
                  "kms:TagResource",
                  "kms:UntagResource",
                  "kms:Update*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyAdministration"
              },
              {
                "actions": [
                  "kms:Decrypt",
                  "kms:DescribeKey",
                  "kms:Encrypt",
                  "kms:GenerateDataKey*",
                  "kms:ReEncrypt*"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::482235484697:role/crossform-tower-cluster-20240424013812345100000002"
                    ],
                    "type": "AWS"
                  }
                ],
                "resources": [
                  "*"
                ],
                "sid": "KeyUsage"
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_alias",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "cluster",
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-west-2:482235484697:alias/eks/crossform-tower",
            "id": "alias/eks/crossform-tower",
            "name": "alias/eks/crossform-tower",
            "name_prefix": "",
            "target_key_arn": "arn:aws:kms:us-west-2:482235484697:key/b7b93509-2433-4879-a33a-4c6c08ca9c55",
            "target_key_id": "b7b93509-2433-4879-a33a-4c6c08ca9c55"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks.module.kms",
      "mode": "managed",
      "type": "aws_kms_key",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:kms:us-west-2:482235484697:key/b7b93509-2433-4879-a33a-4c6c08ca9c55",
            "bypass_policy_lockout_safety_check": false,
            "custom_key_store_id": "",
            "customer_master_key_spec": "SYMMETRIC_DEFAULT",
            "deletion_window_in_days": null,
            "description": "crossform-tower cluster encryption key",
            "enable_key_rotation": true,
            "id": "b7b93509-2433-4879-a33a-4c6c08ca9c55",
            "is_enabled": true,
            "key_id": "b7b93509-2433-4879-a33a-4c6c08ca9c55",
            "key_usage": "ENCRYPT_DECRYPT",
            "multi_region": false,
            "policy": "{\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::482235484697:root\"},\"Resource\":\"*\",\"Sid\":\"Default\"},{\"Action\":[\"kms:Update*\",\"kms:UntagResource\",\"kms:TagResource\",\"kms:ScheduleKeyDeletion\",\"kms:Revoke*\",\"kms:ReplicateKey\",\"kms:Put*\",\"kms:List*\",\"kms:ImportKeyMaterial\",\"kms:Get*\",\"kms:Enable*\",\"kms:Disable*\",\"kms:Describe*\",\"kms:Delete*\",\"kms:Create*\",\"kms:CancelKeyDeletion\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com\"},\"Resource\":\"*\",\"Sid\":\"KeyAdministration\"},{\"Action\":[\"kms:ReEncrypt*\",\"kms:GenerateDataKey*\",\"kms:Encrypt\",\"kms:DescribeKey\",\"kms:Decrypt\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::482235484697:role/crossform-tower-cluster-20240424013812345100000002\"},\"Resource\":\"*\",\"Sid\":\"KeyUsage\"}],\"Version\":\"2012-10-17\"}",
            "tags": {
              "terraform-aws-modules": "eks"
            },
            "tags_all": {
              "terraform-aws-modules": "eks"
            },
            "timeouts": null,
            "xks_key_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.eks.aws_iam_role.this",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.irsa_external_dns",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "482235484697",
            "arn": "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com",
            "id": "482235484697",
            "user_id": "AIDAXAR3ZRIMVAPH4RMYC"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.irsa_external_dns",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "435862200",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::482235484697:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:aud\": \"sts.amazonaws.com\"\n        },\n        \"StringLike\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:sub\": \"system:serviceaccount:kube-system:external-dns\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:aud"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      "system:serviceaccount:kube-system:external-dns"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::482235484697:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.irsa_external_dns",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.irsa_external_dns",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US West (Oregon)",
            "endpoint": "ec2.us-west-2.amazonaws.com",
            "id": "us-west-2",
            "name": "us-west-2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.irsa_external_dns",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::482235484697:role/irsa-crossform-tower-externaldns-m4dx0qad",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:aud\":\"sts.amazonaws.com\"},\"StringLike\":{\"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:sub\":\"system:serviceaccount:kube-system:external-dns\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::482235484697:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-04-24T03:00:50Z",
            "description": "",
            "force_detach_policies": false,
            "id": "irsa-crossform-tower-externaldns-m4dx0qad",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonRoute53FullAccess"
            ],
            "max_session_duration": 3600,
            "name": "irsa-crossform-tower-externaldns-m4dx0qad",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Name": "irsa-crossform-tower-externaldns-m4dx0qad"
            },
            "tags_all": {
              "Name": "irsa-crossform-tower-externaldns-m4dx0qad"
            },
            "unique_id": "AROAXAR3ZRIM2IKTBEJBE"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.irsa_external_dns.data.aws_caller_identity.current",
            "module.irsa_external_dns.data.aws_iam_policy_document.this",
            "module.irsa_external_dns.data.aws_partition.current",
            "module.irsa_external_dns.random_string.random",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.irsa_external_dns",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "0",
          "schema_version": 0,
          "attributes": {
            "id": "irsa-crossform-tower-externaldns-m4dx0qad-20240424030050983700000003",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonRoute53FullAccess",
            "role": "irsa-crossform-tower-externaldns-m4dx0qad"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.irsa_external_dns.aws_iam_role.irsa",
            "module.irsa_external_dns.data.aws_caller_identity.current",
            "module.irsa_external_dns.data.aws_iam_policy_document.this",
            "module.irsa_external_dns.data.aws_partition.current",
            "module.irsa_external_dns.random_string.random",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.irsa_external_dns",
      "mode": "managed",
      "type": "random_string",
      "name": "random",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "m4dx0qad",
            "keepers": null,
            "length": 8,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "m4dx0qad",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.irsa_provider_aws",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "482235484697",
            "arn": "arn:aws:iam::482235484697:user/peter.stukalov@dr.paygears.com",
            "id": "482235484697",
            "user_id": "AIDAXAR3ZRIMVAPH4RMYC"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.irsa_provider_aws",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1186436837",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::482235484697:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:aud\": \"sts.amazonaws.com\"\n        },\n        \"StringLike\": {\n          \"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:sub\": \"system:serviceaccount:crossplane-system:crossplane-provider-aws\"\n        }\n      }\n    }\n  ]\n}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:aud"
                  },
                  {
                    "test": "StringLike",
                    "values": [
                      "system:serviceaccount:crossplane-system:crossplane-provider-aws"
                    ],
                    "variable": "oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::482235484697:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.irsa_provider_aws",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.irsa_provider_aws",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US West (Oregon)",
            "endpoint": "ec2.us-west-2.amazonaws.com",
            "id": "us-west-2",
            "name": "us-west-2"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.irsa_provider_aws",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::482235484697:role/irsa-crossform-tower-crossplane-pp46jpsu",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:aud\":\"sts.amazonaws.com\"},\"StringLike\":{\"oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882:sub\":\"system:serviceaccount:crossplane-system:crossplane-provider-aws\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::482235484697:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/8F7E3D9B6061092A04FBE4D89DF8F882\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-04-26T03:54:13Z",
            "description": "",
            "force_detach_policies": false,
            "id": "irsa-crossform-tower-crossplane-pp46jpsu",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AdministratorAccess"
            ],
            "max_session_duration": 3600,
            "name": "irsa-crossform-tower-crossplane-pp46jpsu",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "Name": "irsa-crossform-tower-crossplane-pp46jpsu"
            },
            "tags_all": {
              "Name": "irsa-crossform-tower-crossplane-pp46jpsu"
            },
            "unique_id": "AROAXAR3ZRIM5N4NDENU3"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.irsa_provider_aws.data.aws_caller_identity.current",
            "module.irsa_provider_aws.data.aws_iam_policy_document.this",
            "module.irsa_provider_aws.data.aws_partition.current",
            "module.irsa_provider_aws.random_string.random",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.irsa_provider_aws",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "irsa",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "0",
          "schema_version": 0,
          "attributes": {
            "id": "irsa-crossform-tower-crossplane-pp46jpsu-20240426035414263000000001",
            "policy_arn": "arn:aws:iam::aws:policy/AdministratorAccess",
            "role": "irsa-crossform-tower-crossplane-pp46jpsu"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.eks.aws_cloudwatch_log_group.this",
            "module.eks.aws_eks_access_entry.this",
            "module.eks.aws_eks_access_policy_association.this",
            "module.eks.aws_eks_cluster.this",
            "module.eks.aws_iam_openid_connect_provider.oidc_provider",
            "module.eks.aws_iam_policy.cni_ipv6_policy",
            "module.eks.aws_iam_role.this",
            "module.eks.aws_iam_role_policy_attachment.this",
            "module.eks.aws_security_group.cluster",
            "module.eks.aws_security_group.node",
            "module.eks.aws_security_group_rule.cluster",
            "module.eks.aws_security_group_rule.node",
            "module.eks.data.aws_caller_identity.current",
            "module.eks.data.aws_iam_policy_document.assume_role_policy",
            "module.eks.data.aws_iam_policy_document.cni_ipv6_policy",
            "module.eks.data.aws_iam_session_context.current",
            "module.eks.data.aws_partition.current",
            "module.eks.data.tls_certificate.this",
            "module.eks.module.kms.aws_kms_external_key.this",
            "module.eks.module.kms.aws_kms_key.this",
            "module.eks.module.kms.aws_kms_replica_external_key.this",
            "module.eks.module.kms.aws_kms_replica_key.this",
            "module.eks.module.kms.data.aws_caller_identity.current",
            "module.eks.module.kms.data.aws_iam_policy_document.this",
            "module.eks.module.kms.data.aws_partition.current",
            "module.irsa_provider_aws.aws_iam_role.irsa",
            "module.irsa_provider_aws.data.aws_caller_identity.current",
            "module.irsa_provider_aws.data.aws_iam_policy_document.this",
            "module.irsa_provider_aws.data.aws_partition.current",
            "module.irsa_provider_aws.random_string.random",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.irsa_provider_aws",
      "mode": "managed",
      "type": "random_string",
      "name": "random",
      "provider": "provider[\"registry.terraform.io/hashicorp/random\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "id": "pp46jpsu",
            "keepers": null,
            "length": 8,
            "lower": true,
            "min_lower": 0,
            "min_numeric": 0,
            "min_special": 0,
            "min_upper": 0,
            "number": true,
            "numeric": true,
            "override_special": null,
            "result": "pp46jpsu",
            "special": false,
            "upper": false
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_eip",
      "name": "nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": null,
            "allocation_id": "eipalloc-0a959b89f270c3e48",
            "associate_with_private_ip": null,
            "association_id": "eipassoc-06e359b0fa6629f25",
            "carrier_ip": "",
            "customer_owned_ip": "",
            "customer_owned_ipv4_pool": "",
            "domain": "vpc",
            "id": "eipalloc-0a959b89f270c3e48",
            "instance": "",
            "network_border_group": "us-west-2",
            "network_interface": "eni-0c51e843bb6708cad",
            "private_dns": "ip-10-0-128-179.us-west-2.compute.internal",
            "private_ip": "10.0.128.179",
            "ptr_record": "",
            "public_dns": "ec2-35-85-178-243.us-west-2.compute.amazonaws.com",
            "public_ip": "35.85.178.243",
            "public_ipv4_pool": "amazon",
            "tags": {
              "Name": "crossform-tower-us-west-2a"
            },
            "tags_all": {
              "Name": "crossform-tower-us-west-2a"
            },
            "timeouts": null,
            "vpc": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjoxODAwMDAwMDAwMDAsInJlYWQiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:482235484697:internet-gateway/igw-04f55b8c0b4be7d88",
            "id": "igw-04f55b8c0b4be7d88",
            "owner_id": "482235484697",
            "tags": {
              "Name": "crossform-tower"
            },
            "tags_all": {
              "Name": "crossform-tower"
            },
            "timeouts": null,
            "vpc_id": "vpc-006f2f6336237da1e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_nat_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allocation_id": "eipalloc-0a959b89f270c3e48",
            "association_id": "eipassoc-06e359b0fa6629f25",
            "connectivity_type": "public",
            "id": "nat-01b95136276a1c0c8",
            "network_interface_id": "eni-0c51e843bb6708cad",
            "private_ip": "10.0.128.179",
            "public_ip": "35.85.178.243",
            "secondary_allocation_ids": [],
            "secondary_private_ip_address_count": 0,
            "secondary_private_ip_addresses": [],
            "subnet_id": "subnet-0e7928b2b3cbd0433",
            "tags": {
              "Name": "crossform-tower-us-west-2a"
            },
            "tags_all": {
              "Name": "crossform-tower-us-west-2a"
            },
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwMCwidXBkYXRlIjo2MDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "private_nat_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "",
            "id": "r-rtb-0c8e6bfc4c9ae5fe61080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "nat-01b95136276a1c0c8",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0c8e6bfc4c9ae5fe6",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_eip.nat",
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_nat_gateway.this",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-04f55b8c0b4be7d88",
            "id": "r-rtb-0c501984e6be5a27b1080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0c501984e6be5a27b",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_internet_gateway.this",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:482235484697:route-table/rtb-0c8e6bfc4c9ae5fe6",
            "id": "rtb-0c8e6bfc4c9ae5fe6",
            "owner_id": "482235484697",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "nat-01b95136276a1c0c8",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "crossform-tower-private"
            },
            "tags_all": {
              "Name": "crossform-tower-private"
            },
            "timeouts": null,
            "vpc_id": "vpc-006f2f6336237da1e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:482235484697:route-table/rtb-0c501984e6be5a27b",
            "id": "rtb-0c501984e6be5a27b",
            "owner_id": "482235484697",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-04f55b8c0b4be7d88",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "crossform-tower-public"
            },
            "tags_all": {
              "Name": "crossform-tower-public"
            },
            "timeouts": null,
            "vpc_id": "vpc-006f2f6336237da1e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-059e981530061fba9",
            "route_table_id": "rtb-0c8e6bfc4c9ae5fe6",
            "subnet_id": "subnet-0ba664334919c2d66",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-05a6817107653293f",
            "route_table_id": "rtb-0c8e6bfc4c9ae5fe6",
            "subnet_id": "subnet-06b312a8fceb4daa4",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.private",
            "module.vpc.aws_subnet.private",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-026a05ac62fab52ff",
            "route_table_id": "rtb-0c501984e6be5a27b",
            "subnet_id": "subnet-0e7928b2b3cbd0433",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0e033d05b201ce8c8",
            "route_table_id": "rtb-0c501984e6be5a27b",
            "subnet_id": "subnet-05ae8ac6a8e860129",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_route_table.public",
            "module.vpc.aws_subnet.public",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:482235484697:subnet/subnet-0ba664334919c2d66",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2a",
            "availability_zone_id": "usw2-az1",
            "cidr_block": "10.0.0.0/18",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0ba664334919c2d66",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "482235484697",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "crossform-tower-private-us-west-2a",
              "kubernetes.io/cluster/crossform-tower": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "crossform-tower-private-us-west-2a",
              "kubernetes.io/cluster/crossform-tower": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-006f2f6336237da1e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:482235484697:subnet/subnet-06b312a8fceb4daa4",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2b",
            "availability_zone_id": "usw2-az2",
            "cidr_block": "10.0.64.0/18",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-06b312a8fceb4daa4",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "482235484697",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "crossform-tower-private-us-west-2b",
              "kubernetes.io/cluster/crossform-tower": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "crossform-tower-private-us-west-2b",
              "kubernetes.io/cluster/crossform-tower": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-006f2f6336237da1e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:482235484697:subnet/subnet-0e7928b2b3cbd0433",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2a",
            "availability_zone_id": "usw2-az1",
            "cidr_block": "10.0.128.0/21",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0e7928b2b3cbd0433",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "482235484697",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "crossform-tower-public-us-west-2a",
              "kubernetes.io/cluster/crossform-tower": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "crossform-tower-public-us-west-2a",
              "kubernetes.io/cluster/crossform-tower": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-006f2f6336237da1e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:482235484697:subnet/subnet-05ae8ac6a8e860129",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-west-2b",
            "availability_zone_id": "usw2-az2",
            "cidr_block": "10.0.136.0/21",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-05ae8ac6a8e860129",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "482235484697",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "crossform-tower-public-us-west-2b",
              "kubernetes.io/cluster/crossform-tower": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "crossform-tower-public-us-west-2b",
              "kubernetes.io/cluster/crossform-tower": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-006f2f6336237da1e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "data.aws_availability_zones.available",
            "module.vpc.aws_vpc.this",
            "module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-west-2:482235484697:vpc/vpc-006f2f6336237da1e",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-06219efae262050d0",
            "default_route_table_id": "rtb-0799059a0eb5a99eb",
            "default_security_group_id": "sg-0192f71056daf4770",
            "dhcp_options_id": "dopt-0086ecba356b641be",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "id": "vpc-006f2f6336237da1e",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-0799059a0eb5a99eb",
            "owner_id": "482235484697",
            "tags": {
              "Name": "crossform-tower"
            },
            "tags_all": {
              "Name": "crossform-tower"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "create_before_destroy": true
        }
      ]
    }
  ],
  "check_results": [
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.eks_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": null
    },
    {
      "object_kind": "resource",
      "config_addr": "module.eks.module.self_managed_node_group.module.user_data.null_resource.validate_cluster_service_cidr",
      "status": "pass",
      "objects": null
    },
    {
      "object_kind": "var",
      "config_addr": "module.vpc.var.flow_log_file_format",
      "status": "unknown",
      "objects": [
        {
          "object_addr": "module.vpc.var.flow_log_file_format",
          "status": "unknown"
        }
      ]
    },
    {
      "object_kind": "var",
      "config_addr": "module.domain.module.this.var.validation_method",
      "status": "unknown",
      "objects": [
        {
          "object_addr": "module.domain.module.this.var.validation_method",
          "status": "unknown"
        }
      ]
    }
  ]
}
